/**
 * Copyright 2016 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

amp-sidebar {
  --story-page-vh: 1vh;
  position: fixed !important;
  top: 0;
  max-height: 100vh !important;
  height: 100vh;
  width: var(--sidebar-width);
  max-width: 80vw;
  background-color: #efefef;
  min-width: 45px !important;
  outline: none;
  overflow-x: hidden !important;
  overflow-y: auto !important;
  z-index: 2147483647;
  -webkit-overflow-scrolling: touch;
  will-change: transform;
}

amp-sidebar[side="left"] {
  left: 0 !important;
  transform: translateX(-100%);
  animation-name: i-amphtml-sidebar-slide-out-left;
}
amp-sidebar[side="left"][open] {
  transform: translateX(0);
  animation-name: i-amphtml-sidebar-slide-in-left;
}

amp-sidebar[side="right"] {
  right: 0 !important;
  transform: translateX(100%);
  animation-name: i-amphtml-sidebar-slide-out-right;
}

amp-sidebar[side="right"][open] {
  transform: translateX(0);
  animation-name: i-amphtml-sidebar-slide-in-right;
}

amp-sidebar[side][i-amphtml-sidebar-opened] {
  transform: none;
  transition: none;
  animation: none;
}

.i-amphtml-sidebar-push-target[side="left"] {
}

.i-amphtml-sidebar-push-target[side="left"][open] {
  transform: translateX(var(--sidebar-width));
}

.i-amphtml-sidebar-push-target[side="right"] {
}

.i-amphtml-sidebar-push-target[side="right"][open] {
  transform: translateX(calc(-1 * var(--sidebar-width)));
}

.i-amphtml-sidebar-push-target[side][i-amphtml-sidebar-opened] {
  transition: none;
}
.i-amphtml-sidebar-push-target[side][i-amphtml-sidebar-closed] {
  transform: none;
  transition: none;
}

amp-sidebar[side], .i-amphtml-sidebar-push-target, .i-amphtml-sidebar-mask {
  /*
   * Note: This uses animations (instead of transitions) to make sure the
   * animation always plays correctly. Previously, the display was toggled in a
   * separate step from applying the attribute for the transition, However,
   * runtime seems to now modify the element in a way that prevents transitions
   * from working correctly.
   */
  /* Use same transition as PWA App-Shell https://goo.gl/AGFioO */
  transition: transform 233ms ease, opacity 233ms;
  animation-duration: 233ms;
  animation-timing-function: cubic-bezier(0,0,.21,1);
  animation-fill-mode: forwards;
}

.i-amphtml-toolbar > ul, .i-amphtml-toolbar > ol {
  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  overflow: auto;
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.i-amphtml-sidebar-mask, .i-amphtml-sidebar-mask-nodisplay {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  opacity: 0;
  /* Prevent someone from making this a full-sceen image */
  background-image: none !important;
  background-color: rgba(0, 0, 0, 0.5);
  animation-name: i-amphtml-sidebar-mask-fade-out;
  z-index: 2147483646;
}

.i-amphtml-sidebar-mask-nodisplay {
  opacity: 0.001 !important;
}

.i-amphtml-sidebar-mask[open] {
  opacity: 1;
}

.i-amphtml-sidebar-mask[i-amphtml-sidebar-opened] {
  transition: none;
}

@keyframes i-amphtml-sidebar-slide-in-left {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes i-amphtml-sidebar-slide-out-left {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(-100%);
  }
}

@keyframes i-amphtml-sidebar-slide-in-right {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes i-amphtml-sidebar-slide-out-right {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(100%);
  }
}