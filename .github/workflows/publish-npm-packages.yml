name: Publish Bento Packages on npm
on:
  workflow_dispatch:
    inputs:
      ampversion:
        description: 'AMP version'
        required: true
      tag:
        description: 'npm package tag (latest | nightly)'
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      extensions: ${{ steps.get-extensions.outputs.extensions }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.events.inputs.ampversion }}
      - name: Get extensions to publish
        id: get-extensions
        run: |
          EXTENSIONS=$(node ./build-system/npm-publish/get-extensions.js)
          echo "::set-output name=extensions::{\"include\":${EXTENSIONS}}"
  publish:
    if: github.repository == 'ampproject/amphtml'
    environment: NPM_TOKEN #TODO: change environment name in repo settings
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.extensions) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.events.inputs.ampversion }}
      - uses: actions/setup-node@v2
        with:
          check-latest: true
          registry-url: https://registry.npmjs.org
      - name: Build package
        run: |
          npm install
          node ./build-system/npm-publish/build-npm-binaries.js ${{ matrix.extension }}
          node ./build-system/npm-publish/write-package-files.js ${{ matrix.extension }} ${{ github.event.inputs.ampversion }}
      - name: Publish v1
        run: npm publish ./extensions/${{ matrix.extension }}/1.0 --access public --tag ${{ github.event.inputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish v2 if it exists
        run: |
          if $(test -d ${{ github.workspace }}/extensions/${{ matrix.extension }}/2.0); then      
            npm publish ./extensions/${{ matrix.extension }}/2.0 --access public --tag ${{ github.event.inputs.tag }}
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
