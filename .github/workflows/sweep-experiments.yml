# Executes `amp sweep-experiments` on a schedule.
# If experiments are swept, a PR is created.

name: Sweep Experiments

on:
  schedule:
    # First day of the month at 00:00:00
    - cron: '0 0 1 * *'

permissions:
  contents: read

jobs:
  sweep-experiments:
    permissions:
      contents: write # for peter-evans/create-pull-request to create branch
      issues: write # for peter-evans/create-or-update-comment to create or update comment
      pull-requests: write # for peter-evans/create-pull-request to create a PR
    if: github.repository == 'ampproject/amphtml'
    name: Sweep Experiments
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout Repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - name: Set Up Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: lts/*

      - name: Set Up Environment
        run: sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}

      - name: Install Dependencies
        run: npm ci

      - name: Sweep
        id: sweep
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          amp sweep-experiments

          title=$(git log -1 --format=%s)
          title="${title//'%'/'%25'}"
          title="${title//$'\n'/'%0A'}"
          title="${title//$'\r'/'%0D'}"
          echo "title=$(echo "$title")" >> $GITHUB_OUTPUT

          body=$(git log -1 --format=%b)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "body=$(echo "$body")" >> $GITHUB_OUTPUT

          hash=$(git log -1 --format=%h)
          hash="${hash//'%'/'%25'}"
          hash="${hash//$'\n'/'%0A'}"
          hash="${hash//$'\r'/'%0D'}"
          echo "branch=$(echo "sweep-experiments-${hash}")" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: pull-request
        uses: peter-evans/create-pull-request@18f7dc018cc2cd597073088f7c7591b9d1c02672 # v3.14.0
        with:
          draft: true
          title: ${{ steps.sweep.outputs.title }}
          body: ${{ steps.sweep.outputs.body }}
          branch: ${{ steps.sweep.outputs.branch }}

      - name: Comment on Pull Request
        if: ${{ steps.pull-request.outputs.pull-request-number }}
        uses: peter-evans/create-or-update-comment@a35cf36e5301d70b76f316e867e7788a55a31dae # v1.4.5
        with:
          issue-number: ${{ steps.pull-request.outputs.pull-request-number }}
          body: |
            You may checkout this pull request to follow-up manually:

            ```
            git checkout -t upstream/${{ steps.sweep.outputs.branch }}
            ```

            If you're a repository collaborator, you may push to the branch associated with this pull request.

      - name: Cleanup Branches
        if: ${{ steps.pull-request.outputs.pull-request-number }}
        run: |
          node build-system/tasks/sweep-experiments/cleanup-branches.js --except="${{ steps.sweep.outputs.branch }}"

  create-issue-on-error:
    if: failure()
    needs: sweep-experiments
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    environment: create_issue_on_error
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v2.3.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Create issue on error
        uses: JasonEtco/create-an-issue@e27dddc79c92bc6e4562f268fffa5ed752639abd # v2.9.1
        with:
          filename: .github/create_issue_on_error.md
        env:
          GITHUB_TOKEN: ${{ secrets.AMPPROJECTBOT }}
          WORKFLOW_NAME: ${{ github.workflow }}
          MENTION: '@ampproject/wg-infra'
          REPO_SLUG: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
