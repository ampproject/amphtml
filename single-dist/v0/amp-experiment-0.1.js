(self.AMP=self.AMP||[]).push({n:"amp-experiment",i:["_base_i","_base_misc"],v:"1904281823091",f:(function(AMP,_){
var $Variants$$module$extensions$amp_experiment$0_1$variant$$=function($ampdoc$jscomp$180$$){this.ampdoc=$ampdoc$jscomp$180$$;this.$D$=new _.$Deferred$$module$src$utils$promise$$},$allocateVariant$$module$extensions$amp_experiment$0_1$variant$$=function($ampdoc$jscomp$181$$,$experimentName$jscomp$4$$,$config$jscomp$65$$){$validateConfig$$module$extensions$amp_experiment$0_1$variant$$($config$jscomp$65$$);var $hasConsentPromise_override$jscomp$1$$=_.$JSCompiler_StaticMethods_getParam$$(_.$Services$$module$src$services$viewerForDoc$$($ampdoc$jscomp$181$$),
"amp-x-"+$experimentName$jscomp$4$$);if($hasConsentPromise_override$jscomp$1$$&&_.$hasOwn$$module$src$utils$object$$($config$jscomp$65$$.variants,$hasConsentPromise_override$jscomp$1$$))return Promise.resolve($hasConsentPromise_override$jscomp$1$$);var $sticky$$=!1!==$config$jscomp$65$$.sticky,$cidScope$$=$config$jscomp$65$$.cidScope||"amp-experiment";$hasConsentPromise_override$jscomp$1$$=Promise.resolve(!0);$sticky$$&&$config$jscomp$65$$.consentNotificationId&&($hasConsentPromise_override$jscomp$1$$=
_.$Services$$module$src$services$userNotificationManagerForDoc$$($ampdoc$jscomp$181$$.$getHeadNode$()).then(function($ampdoc$jscomp$181$$){return $ampdoc$jscomp$181$$.$H$($config$jscomp$65$$.consentNotificationId)}).then(function($ampdoc$jscomp$181$$){return $ampdoc$jscomp$181$$.$isDismissed$()}));return $hasConsentPromise_override$jscomp$1$$.then(function($hasConsentPromise_override$jscomp$1$$){return $hasConsentPromise_override$jscomp$1$$?$getBucketTicket$$module$extensions$amp_experiment$0_1$variant$$($ampdoc$jscomp$181$$,
$config$jscomp$65$$.group||$experimentName$jscomp$4$$,$sticky$$?$cidScope$$:null).then(function($ampdoc$jscomp$181$$){for(var $experimentName$jscomp$4$$=0,$hasConsentPromise_override$jscomp$1$$=Object.keys($config$jscomp$65$$.variants).sort(),$sticky$$=0;$sticky$$<$hasConsentPromise_override$jscomp$1$$.length;$sticky$$++)if($experimentName$jscomp$4$$+=$config$jscomp$65$$.variants[$hasConsentPromise_override$jscomp$1$$[$sticky$$]],$ampdoc$jscomp$181$$<$experimentName$jscomp$4$$)return $hasConsentPromise_override$jscomp$1$$[$sticky$$];
return null}):null})},$validateConfig$$module$extensions$amp_experiment$0_1$variant$$=function($config$jscomp$66_variants$jscomp$4$$){$config$jscomp$66_variants$jscomp$4$$=$config$jscomp$66_variants$jscomp$4$$.variants;for(var $variantName$$ in $config$jscomp$66_variants$jscomp$4$$)_.$hasOwn$$module$src$utils$object$$($config$jscomp$66_variants$jscomp$4$$,$variantName$$)},$getBucketTicket$$module$extensions$amp_experiment$0_1$variant$$=function($ampdoc$jscomp$182$$,$group$jscomp$2$$,$opt_cidScope$$){if(!$opt_cidScope$$)return Promise.resolve(100*
$ampdoc$jscomp$182$$.$win$.Math.random());var $cidPromise$jscomp$3$$=_.$Services$$module$src$services$cidForDoc$$($ampdoc$jscomp$182$$).then(function($ampdoc$jscomp$182$$){return $ampdoc$jscomp$182$$.get({scope:$opt_cidScope$$,createCookieIfNotPresent:!0},Promise.resolve())});return Promise.all([$cidPromise$jscomp$3$$,_.$Services$$module$src$services$cryptoFor$$($ampdoc$jscomp$182$$.$win$)]).then(function($ampdoc$jscomp$182$$){return _.$JSCompiler_StaticMethods_uniform$$($ampdoc$jscomp$182$$[1],$group$jscomp$2$$+
":"+$ampdoc$jscomp$182$$[0])}).then(function($ampdoc$jscomp$182$$){return 100*$ampdoc$jscomp$182$$})},$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$=function($var_args$jscomp$72$$){return AMP.BaseElement.apply(this,arguments)||this};$Variants$$module$extensions$amp_experiment$0_1$variant$$.prototype.init=function($variants$jscomp$3$$){this.$D$.resolve($variants$jscomp$3$$)};$Variants$$module$extensions$amp_experiment$0_1$variant$$.prototype.$whenReady$=function(){return this.$D$.$promise$};_.$$jscomp$inherits$$($AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$,AMP.BaseElement);$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.$isLayoutSupported$=function($layout$jscomp$61$$){return"nodisplay"==$layout$jscomp$61$$||"container"==$layout$jscomp$61$$};
$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.$buildCallback$=function(){var $$jscomp$this$jscomp$621$$=this;return _.$getServicePromiseForDoc$$module$src$service$$(this.$getAmpDoc$(),"variant").then(function($variantsService$$){try{var $config$jscomp$67$$=_.$parseJson$$module$src$json$$($$jscomp$this$jscomp$621$$.element.children[0].textContent),$results$jscomp$21$$=Object.create(null),$variants$jscomp$5$$=Object.keys($config$jscomp$67$$).map(function($variantsService$$){return $allocateVariant$$module$extensions$amp_experiment$0_1$variant$$($$jscomp$this$jscomp$621$$.$getAmpDoc$(),
$variantsService$$,$config$jscomp$67$$[$variantsService$$]).then(function($$jscomp$this$jscomp$621$$){$results$jscomp$21$$[$variantsService$$]=$$jscomp$this$jscomp$621$$})}),$experimentVariants$$=Promise.all($variants$jscomp$5$$).then(function(){return $results$jscomp$21$$}).then($$jscomp$this$jscomp$621$$.$D$.bind($$jscomp$this$jscomp$621$$));$variantsService$$.init($experimentVariants$$)}catch($e$283$$){throw $variantsService$$.init({}),$e$283$$;}})};
$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.$D$=function($experiments$jscomp$4$$){return this.$getAmpDoc$().$whenBodyAvailable$().then(function($body$jscomp$24$$){for(var $name$jscomp$243$$ in $experiments$jscomp$4$$)$experiments$jscomp$4$$[$name$jscomp$243$$]&&$body$jscomp$24$$.setAttribute("amp-x-"+$name$jscomp$243$$,$experiments$jscomp$4$$[$name$jscomp$243$$]);return $experiments$jscomp$4$$})};var $AMP$jscomp$inline_3390$$=self.AMP;
$AMP$jscomp$inline_3390$$.registerServiceForDoc("variant",$Variants$$module$extensions$amp_experiment$0_1$variant$$);$AMP$jscomp$inline_3390$$.registerElement("amp-experiment",$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$);
})});

//# sourceMappingURL=amp-experiment-0.1.js.map
