import { resolvedPromise as _resolvedPromise } from "./core/data-structures/promise";

/**
 * Copyright 2016 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { adConfig } from "../ads/_config";
import { dev } from "./log";
import { Services } from "./service";

/**
 * @param {AMP.BaseElement} adElement
 * @return {!Promise<string|undefined>} A promise for a CID or undefined if
 *     - the ad network does not request one or
 *     - `amp-analytics` which provides the CID service was not installed.
 */
export function getAdCid(adElement) {
  var config = adConfig[adElement.element.getAttribute('type')];

  if (!config || !config['clientIdScope']) {
    return _resolvedPromise();
  }

  return getOrCreateAdCid(adElement.getAmpDoc(), config['clientIdScope'], config['clientIdCookieName']);
}

/**
 * @param {!./service/ampdoc-impl.AmpDoc} ampDoc
 * @param {string} clientIdScope
 * @param {string=} opt_clientIdCookieName
 * @param {number=} opt_timeout
 * @return {!Promise<string|undefined>} A promise for a CID or undefined.
 */
export function getOrCreateAdCid(ampDoc, clientIdScope, opt_clientIdCookieName, opt_timeout) {
  var timeout = isNaN(opt_timeout) || opt_timeout == null ? 1000 : opt_timeout;
  var cidPromise = Services.cidForDoc(ampDoc).then(function (cidService) {
    if (!cidService) {
      return;
    }

    return cidService.get({
      scope: dev().assertString(clientIdScope),
      createCookieIfNotPresent: true,
      cookieName: opt_clientIdCookieName
    }, Promise.resolve(undefined)).catch(function (error) {
      // Not getting a CID is not fatal.
      dev().error('AD-CID', error);
      return undefined;
    });
  });
  // The CID should never be crucial for an ad. If it does not come within
  // 1 second, assume it will never arrive.
  return Services.timerFor(ampDoc.win).timeoutPromise(timeout, cidPromise, 'cid timeout').catch(function (error) {
    // Timeout is not fatal.
    dev().warn('AD-CID', error);
    return undefined;
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkLWNpZC5qcyJdLCJuYW1lcyI6WyJhZENvbmZpZyIsImRldiIsIlNlcnZpY2VzIiwiZ2V0QWRDaWQiLCJhZEVsZW1lbnQiLCJjb25maWciLCJlbGVtZW50IiwiZ2V0QXR0cmlidXRlIiwiZ2V0T3JDcmVhdGVBZENpZCIsImdldEFtcERvYyIsImFtcERvYyIsImNsaWVudElkU2NvcGUiLCJvcHRfY2xpZW50SWRDb29raWVOYW1lIiwib3B0X3RpbWVvdXQiLCJ0aW1lb3V0IiwiaXNOYU4iLCJjaWRQcm9taXNlIiwiY2lkRm9yRG9jIiwidGhlbiIsImNpZFNlcnZpY2UiLCJnZXQiLCJzY29wZSIsImFzc2VydFN0cmluZyIsImNyZWF0ZUNvb2tpZUlmTm90UHJlc2VudCIsImNvb2tpZU5hbWUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInVuZGVmaW5lZCIsImNhdGNoIiwiZXJyb3IiLCJ0aW1lckZvciIsIndpbiIsInRpbWVvdXRQcm9taXNlIiwid2FybiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxTQUFRQSxRQUFSO0FBRUEsU0FBUUMsR0FBUjtBQUNBLFNBQVFDLFFBQVI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyxRQUFULENBQWtCQyxTQUFsQixFQUE2QjtBQUNsQyxNQUFNQyxNQUFNLEdBQUdMLFFBQVEsQ0FBQ0ksU0FBUyxDQUFDRSxPQUFWLENBQWtCQyxZQUFsQixDQUErQixNQUEvQixDQUFELENBQXZCOztBQUNBLE1BQUksQ0FBQ0YsTUFBRCxJQUFXLENBQUNBLE1BQU0sQ0FBQyxlQUFELENBQXRCLEVBQXlDO0FBQ3ZDLFdBQU8sa0JBQVA7QUFDRDs7QUFDRCxTQUFPRyxnQkFBZ0IsQ0FDckJKLFNBQVMsQ0FBQ0ssU0FBVixFQURxQixFQUVyQkosTUFBTSxDQUFDLGVBQUQsQ0FGZSxFQUdyQkEsTUFBTSxDQUFDLG9CQUFELENBSGUsQ0FBdkI7QUFLRDs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0csZ0JBQVQsQ0FDTEUsTUFESyxFQUVMQyxhQUZLLEVBR0xDLHNCQUhLLEVBSUxDLFdBSkssRUFLTDtBQUNBLE1BQU1DLE9BQU8sR0FDWEMsS0FBSyxDQUFDRixXQUFELENBQUwsSUFBc0JBLFdBQVcsSUFBSSxJQUFyQyxHQUE0QyxJQUE1QyxHQUFtREEsV0FEckQ7QUFFQSxNQUFNRyxVQUFVLEdBQUdkLFFBQVEsQ0FBQ2UsU0FBVCxDQUFtQlAsTUFBbkIsRUFBMkJRLElBQTNCLENBQWdDLFVBQUNDLFVBQUQsRUFBZ0I7QUFDakUsUUFBSSxDQUFDQSxVQUFMLEVBQWlCO0FBQ2Y7QUFDRDs7QUFDRCxXQUFPQSxVQUFVLENBQ2RDLEdBREksQ0FFSDtBQUNFQyxNQUFBQSxLQUFLLEVBQUVwQixHQUFHLEdBQUdxQixZQUFOLENBQW1CWCxhQUFuQixDQURUO0FBRUVZLE1BQUFBLHdCQUF3QixFQUFFLElBRjVCO0FBR0VDLE1BQUFBLFVBQVUsRUFBRVo7QUFIZCxLQUZHLEVBT0hhLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQkMsU0FBaEIsQ0FQRyxFQVNKQyxLQVRJLENBU0UsVUFBQ0MsS0FBRCxFQUFXO0FBQ2hCO0FBQ0E1QixNQUFBQSxHQUFHLEdBQUc0QixLQUFOLENBQVksUUFBWixFQUFzQkEsS0FBdEI7QUFDQSxhQUFPRixTQUFQO0FBQ0QsS0FiSSxDQUFQO0FBY0QsR0FsQmtCLENBQW5CO0FBbUJBO0FBQ0E7QUFDQSxTQUFPekIsUUFBUSxDQUFDNEIsUUFBVCxDQUFrQnBCLE1BQU0sQ0FBQ3FCLEdBQXpCLEVBQ0pDLGNBREksQ0FDV2xCLE9BRFgsRUFDb0JFLFVBRHBCLEVBQ2dDLGFBRGhDLEVBRUpZLEtBRkksQ0FFRSxVQUFDQyxLQUFELEVBQVc7QUFDaEI7QUFDQTVCLElBQUFBLEdBQUcsR0FBR2dDLElBQU4sQ0FBVyxRQUFYLEVBQXFCSixLQUFyQjtBQUNBLFdBQU9GLFNBQVA7QUFDRCxHQU5JLENBQVA7QUFPRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTYgVGhlIEFNUCBIVE1MIEF1dGhvcnMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUy1JU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge2FkQ29uZmlnfSBmcm9tICcjYWRzL19jb25maWcnO1xuXG5pbXBvcnQge2Rldn0gZnJvbSAnLi9sb2cnO1xuaW1wb3J0IHtTZXJ2aWNlc30gZnJvbSAnLi9zZXJ2aWNlJztcblxuLyoqXG4gKiBAcGFyYW0ge0FNUC5CYXNlRWxlbWVudH0gYWRFbGVtZW50XG4gKiBAcmV0dXJuIHshUHJvbWlzZTxzdHJpbmd8dW5kZWZpbmVkPn0gQSBwcm9taXNlIGZvciBhIENJRCBvciB1bmRlZmluZWQgaWZcbiAqICAgICAtIHRoZSBhZCBuZXR3b3JrIGRvZXMgbm90IHJlcXVlc3Qgb25lIG9yXG4gKiAgICAgLSBgYW1wLWFuYWx5dGljc2Agd2hpY2ggcHJvdmlkZXMgdGhlIENJRCBzZXJ2aWNlIHdhcyBub3QgaW5zdGFsbGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWRDaWQoYWRFbGVtZW50KSB7XG4gIGNvbnN0IGNvbmZpZyA9IGFkQ29uZmlnW2FkRWxlbWVudC5lbGVtZW50LmdldEF0dHJpYnV0ZSgndHlwZScpXTtcbiAgaWYgKCFjb25maWcgfHwgIWNvbmZpZ1snY2xpZW50SWRTY29wZSddKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG4gIHJldHVybiBnZXRPckNyZWF0ZUFkQ2lkKFxuICAgIGFkRWxlbWVudC5nZXRBbXBEb2MoKSxcbiAgICBjb25maWdbJ2NsaWVudElkU2NvcGUnXSxcbiAgICBjb25maWdbJ2NsaWVudElkQ29va2llTmFtZSddXG4gICk7XG59XG5cbi8qKlxuICogQHBhcmFtIHshLi9zZXJ2aWNlL2FtcGRvYy1pbXBsLkFtcERvY30gYW1wRG9jXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xpZW50SWRTY29wZVxuICogQHBhcmFtIHtzdHJpbmc9fSBvcHRfY2xpZW50SWRDb29raWVOYW1lXG4gKiBAcGFyYW0ge251bWJlcj19IG9wdF90aW1lb3V0XG4gKiBAcmV0dXJuIHshUHJvbWlzZTxzdHJpbmd8dW5kZWZpbmVkPn0gQSBwcm9taXNlIGZvciBhIENJRCBvciB1bmRlZmluZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRPckNyZWF0ZUFkQ2lkKFxuICBhbXBEb2MsXG4gIGNsaWVudElkU2NvcGUsXG4gIG9wdF9jbGllbnRJZENvb2tpZU5hbWUsXG4gIG9wdF90aW1lb3V0XG4pIHtcbiAgY29uc3QgdGltZW91dCA9XG4gICAgaXNOYU4ob3B0X3RpbWVvdXQpIHx8IG9wdF90aW1lb3V0ID09IG51bGwgPyAxMDAwIDogb3B0X3RpbWVvdXQ7XG4gIGNvbnN0IGNpZFByb21pc2UgPSBTZXJ2aWNlcy5jaWRGb3JEb2MoYW1wRG9jKS50aGVuKChjaWRTZXJ2aWNlKSA9PiB7XG4gICAgaWYgKCFjaWRTZXJ2aWNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiBjaWRTZXJ2aWNlXG4gICAgICAuZ2V0KFxuICAgICAgICB7XG4gICAgICAgICAgc2NvcGU6IGRldigpLmFzc2VydFN0cmluZyhjbGllbnRJZFNjb3BlKSxcbiAgICAgICAgICBjcmVhdGVDb29raWVJZk5vdFByZXNlbnQ6IHRydWUsXG4gICAgICAgICAgY29va2llTmFtZTogb3B0X2NsaWVudElkQ29va2llTmFtZSxcbiAgICAgICAgfSxcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZClcbiAgICAgIClcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgLy8gTm90IGdldHRpbmcgYSBDSUQgaXMgbm90IGZhdGFsLlxuICAgICAgICBkZXYoKS5lcnJvcignQUQtQ0lEJywgZXJyb3IpO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfSk7XG4gIH0pO1xuICAvLyBUaGUgQ0lEIHNob3VsZCBuZXZlciBiZSBjcnVjaWFsIGZvciBhbiBhZC4gSWYgaXQgZG9lcyBub3QgY29tZSB3aXRoaW5cbiAgLy8gMSBzZWNvbmQsIGFzc3VtZSBpdCB3aWxsIG5ldmVyIGFycml2ZS5cbiAgcmV0dXJuIFNlcnZpY2VzLnRpbWVyRm9yKGFtcERvYy53aW4pXG4gICAgLnRpbWVvdXRQcm9taXNlKHRpbWVvdXQsIGNpZFByb21pc2UsICdjaWQgdGltZW91dCcpXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgLy8gVGltZW91dCBpcyBub3QgZmF0YWwuXG4gICAgICBkZXYoKS53YXJuKCdBRC1DSUQnLCBlcnJvcik7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0pO1xufVxuIl19
// /Users/mszylkowski/src/amphtml/src/ad-cid.js