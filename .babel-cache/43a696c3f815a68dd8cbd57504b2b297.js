/**
 * Copyright 2016 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** @typedef {{name: string, value: (string|number|null)}} */
export var QueryParameterDef;

/**
 * Builds a URL from query parameters, truncating to a maximum length if
 * necessary.
 * @param {string} baseUrl scheme, domain, and path for the URL.
 * @param {!Object<string,string|number|null>} queryParams query parameters for
 *     the URL.
 * @param {number} maxLength length to truncate the URL to if necessary.
 * @param {?QueryParameterDef=} opt_truncationQueryParam query parameter to
 *     append to the URL iff any query parameters were truncated.
 * @return {string} the fully constructed URL.
 */
export function buildUrl(baseUrl, queryParams, maxLength, opt_truncationQueryParam) {
  var encodedParams = [];
  var encodedTruncationParam = opt_truncationQueryParam && !(opt_truncationQueryParam.value == null || opt_truncationQueryParam.value === '') ? encodeURIComponent(opt_truncationQueryParam.name) + '=' + encodeURIComponent(String(opt_truncationQueryParam.value)) : null;
  var capacity = maxLength - baseUrl.length;

  if (encodedTruncationParam) {
    capacity -= encodedTruncationParam.length + 1;
  }

  var keys = Object.keys(queryParams);

  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = queryParams[key];

    if (value == null || value === '') {
      continue;
    }

    var encodedNameAndSep = encodeURIComponent(key) + '=';
    var encodedValue = encodeURIComponent(String(value));
    var fullLength = encodedNameAndSep.length + encodedValue.length + 1;

    if (fullLength > capacity) {
      var truncatedValue = encodedValue.substr(0, capacity - encodedNameAndSep.length - 1) // Don't end with a partially truncated escape sequence
      .replace(/%\w?$/, '');

      if (truncatedValue) {
        encodedParams.push(encodedNameAndSep + truncatedValue);
      }

      if (encodedTruncationParam) {
        encodedParams.push(encodedTruncationParam);
      }

      break;
    }

    encodedParams.push(encodedNameAndSep + encodedValue);
    capacity -= fullLength;
  }

  if (!encodedParams.length) {
    return baseUrl;
  }

  return baseUrl + '?' + encodedParams.join('&');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVybC1idWlsZGVyLmpzIl0sIm5hbWVzIjpbIlF1ZXJ5UGFyYW1ldGVyRGVmIiwiYnVpbGRVcmwiLCJiYXNlVXJsIiwicXVlcnlQYXJhbXMiLCJtYXhMZW5ndGgiLCJvcHRfdHJ1bmNhdGlvblF1ZXJ5UGFyYW0iLCJlbmNvZGVkUGFyYW1zIiwiZW5jb2RlZFRydW5jYXRpb25QYXJhbSIsInZhbHVlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwibmFtZSIsIlN0cmluZyIsImNhcGFjaXR5IiwibGVuZ3RoIiwia2V5cyIsIk9iamVjdCIsImkiLCJrZXkiLCJlbmNvZGVkTmFtZUFuZFNlcCIsImVuY29kZWRWYWx1ZSIsImZ1bGxMZW5ndGgiLCJ0cnVuY2F0ZWRWYWx1ZSIsInN1YnN0ciIsInJlcGxhY2UiLCJwdXNoIiwiam9pbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxJQUFJQSxpQkFBSjs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyxRQUFULENBQ0xDLE9BREssRUFFTEMsV0FGSyxFQUdMQyxTQUhLLEVBSUxDLHdCQUpLLEVBS0w7QUFDQSxNQUFNQyxhQUFhLEdBQUcsRUFBdEI7QUFDQSxNQUFNQyxzQkFBc0IsR0FDMUJGLHdCQUF3QixJQUN4QixFQUNFQSx3QkFBd0IsQ0FBQ0csS0FBekIsSUFBa0MsSUFBbEMsSUFDQUgsd0JBQXdCLENBQUNHLEtBQXpCLEtBQW1DLEVBRnJDLENBREEsR0FLSUMsa0JBQWtCLENBQUNKLHdCQUF3QixDQUFDSyxJQUExQixDQUFsQixHQUNBLEdBREEsR0FFQUQsa0JBQWtCLENBQUNFLE1BQU0sQ0FBQ04sd0JBQXdCLENBQUNHLEtBQTFCLENBQVAsQ0FQdEIsR0FRSSxJQVROO0FBVUEsTUFBSUksUUFBUSxHQUFHUixTQUFTLEdBQUdGLE9BQU8sQ0FBQ1csTUFBbkM7O0FBQ0EsTUFBSU4sc0JBQUosRUFBNEI7QUFDMUJLLElBQUFBLFFBQVEsSUFBSUwsc0JBQXNCLENBQUNNLE1BQXZCLEdBQWdDLENBQTVDO0FBQ0Q7O0FBQ0QsTUFBTUMsSUFBSSxHQUFHQyxNQUFNLENBQUNELElBQVAsQ0FBWVgsV0FBWixDQUFiOztBQUNBLE9BQUssSUFBSWEsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsSUFBSSxDQUFDRCxNQUF6QixFQUFpQ0csQ0FBQyxFQUFsQyxFQUFzQztBQUNwQyxRQUFNQyxHQUFHLEdBQUdILElBQUksQ0FBQ0UsQ0FBRCxDQUFoQjtBQUNBLFFBQU1SLEtBQUssR0FBR0wsV0FBVyxDQUFDYyxHQUFELENBQXpCOztBQUNBLFFBQUlULEtBQUssSUFBSSxJQUFULElBQWlCQSxLQUFLLEtBQUssRUFBL0IsRUFBbUM7QUFDakM7QUFDRDs7QUFDRCxRQUFNVSxpQkFBaUIsR0FBR1Qsa0JBQWtCLENBQUNRLEdBQUQsQ0FBbEIsR0FBMEIsR0FBcEQ7QUFDQSxRQUFNRSxZQUFZLEdBQUdWLGtCQUFrQixDQUFDRSxNQUFNLENBQUNILEtBQUQsQ0FBUCxDQUF2QztBQUNBLFFBQU1ZLFVBQVUsR0FBR0YsaUJBQWlCLENBQUNMLE1BQWxCLEdBQTJCTSxZQUFZLENBQUNOLE1BQXhDLEdBQWlELENBQXBFOztBQUNBLFFBQUlPLFVBQVUsR0FBR1IsUUFBakIsRUFBMkI7QUFDekIsVUFBTVMsY0FBYyxHQUFHRixZQUFZLENBQ2hDRyxNQURvQixDQUNiLENBRGEsRUFDVlYsUUFBUSxHQUFHTSxpQkFBaUIsQ0FBQ0wsTUFBN0IsR0FBc0MsQ0FENUIsRUFFckI7QUFGcUIsT0FHcEJVLE9BSG9CLENBR1osT0FIWSxFQUdILEVBSEcsQ0FBdkI7O0FBSUEsVUFBSUYsY0FBSixFQUFvQjtBQUNsQmYsUUFBQUEsYUFBYSxDQUFDa0IsSUFBZCxDQUFtQk4saUJBQWlCLEdBQUdHLGNBQXZDO0FBQ0Q7O0FBQ0QsVUFBSWQsc0JBQUosRUFBNEI7QUFDMUJELFFBQUFBLGFBQWEsQ0FBQ2tCLElBQWQsQ0FBbUJqQixzQkFBbkI7QUFDRDs7QUFDRDtBQUNEOztBQUNERCxJQUFBQSxhQUFhLENBQUNrQixJQUFkLENBQW1CTixpQkFBaUIsR0FBR0MsWUFBdkM7QUFDQVAsSUFBQUEsUUFBUSxJQUFJUSxVQUFaO0FBQ0Q7O0FBQ0QsTUFBSSxDQUFDZCxhQUFhLENBQUNPLE1BQW5CLEVBQTJCO0FBQ3pCLFdBQU9YLE9BQVA7QUFDRDs7QUFDRCxTQUFPQSxPQUFPLEdBQUcsR0FBVixHQUFnQkksYUFBYSxDQUFDbUIsSUFBZCxDQUFtQixHQUFuQixDQUF2QjtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNiBUaGUgQU1QIEhUTUwgQXV0aG9ycy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTLUlTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKiBAdHlwZWRlZiB7e25hbWU6IHN0cmluZywgdmFsdWU6IChzdHJpbmd8bnVtYmVyfG51bGwpfX0gKi9cbmV4cG9ydCBsZXQgUXVlcnlQYXJhbWV0ZXJEZWY7XG5cbi8qKlxuICogQnVpbGRzIGEgVVJMIGZyb20gcXVlcnkgcGFyYW1ldGVycywgdHJ1bmNhdGluZyB0byBhIG1heGltdW0gbGVuZ3RoIGlmXG4gKiBuZWNlc3NhcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVybCBzY2hlbWUsIGRvbWFpbiwgYW5kIHBhdGggZm9yIHRoZSBVUkwuXG4gKiBAcGFyYW0geyFPYmplY3Q8c3RyaW5nLHN0cmluZ3xudW1iZXJ8bnVsbD59IHF1ZXJ5UGFyYW1zIHF1ZXJ5IHBhcmFtZXRlcnMgZm9yXG4gKiAgICAgdGhlIFVSTC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBtYXhMZW5ndGggbGVuZ3RoIHRvIHRydW5jYXRlIHRoZSBVUkwgdG8gaWYgbmVjZXNzYXJ5LlxuICogQHBhcmFtIHs/UXVlcnlQYXJhbWV0ZXJEZWY9fSBvcHRfdHJ1bmNhdGlvblF1ZXJ5UGFyYW0gcXVlcnkgcGFyYW1ldGVyIHRvXG4gKiAgICAgYXBwZW5kIHRvIHRoZSBVUkwgaWZmIGFueSBxdWVyeSBwYXJhbWV0ZXJzIHdlcmUgdHJ1bmNhdGVkLlxuICogQHJldHVybiB7c3RyaW5nfSB0aGUgZnVsbHkgY29uc3RydWN0ZWQgVVJMLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRVcmwoXG4gIGJhc2VVcmwsXG4gIHF1ZXJ5UGFyYW1zLFxuICBtYXhMZW5ndGgsXG4gIG9wdF90cnVuY2F0aW9uUXVlcnlQYXJhbVxuKSB7XG4gIGNvbnN0IGVuY29kZWRQYXJhbXMgPSBbXTtcbiAgY29uc3QgZW5jb2RlZFRydW5jYXRpb25QYXJhbSA9XG4gICAgb3B0X3RydW5jYXRpb25RdWVyeVBhcmFtICYmXG4gICAgIShcbiAgICAgIG9wdF90cnVuY2F0aW9uUXVlcnlQYXJhbS52YWx1ZSA9PSBudWxsIHx8XG4gICAgICBvcHRfdHJ1bmNhdGlvblF1ZXJ5UGFyYW0udmFsdWUgPT09ICcnXG4gICAgKVxuICAgICAgPyBlbmNvZGVVUklDb21wb25lbnQob3B0X3RydW5jYXRpb25RdWVyeVBhcmFtLm5hbWUpICtcbiAgICAgICAgJz0nICtcbiAgICAgICAgZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhvcHRfdHJ1bmNhdGlvblF1ZXJ5UGFyYW0udmFsdWUpKVxuICAgICAgOiBudWxsO1xuICBsZXQgY2FwYWNpdHkgPSBtYXhMZW5ndGggLSBiYXNlVXJsLmxlbmd0aDtcbiAgaWYgKGVuY29kZWRUcnVuY2F0aW9uUGFyYW0pIHtcbiAgICBjYXBhY2l0eSAtPSBlbmNvZGVkVHJ1bmNhdGlvblBhcmFtLmxlbmd0aCArIDE7XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHF1ZXJ5UGFyYW1zKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcbiAgICBjb25zdCB2YWx1ZSA9IHF1ZXJ5UGFyYW1zW2tleV07XG4gICAgaWYgKHZhbHVlID09IG51bGwgfHwgdmFsdWUgPT09ICcnKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY29uc3QgZW5jb2RlZE5hbWVBbmRTZXAgPSBlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JztcbiAgICBjb25zdCBlbmNvZGVkVmFsdWUgPSBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHZhbHVlKSk7XG4gICAgY29uc3QgZnVsbExlbmd0aCA9IGVuY29kZWROYW1lQW5kU2VwLmxlbmd0aCArIGVuY29kZWRWYWx1ZS5sZW5ndGggKyAxO1xuICAgIGlmIChmdWxsTGVuZ3RoID4gY2FwYWNpdHkpIHtcbiAgICAgIGNvbnN0IHRydW5jYXRlZFZhbHVlID0gZW5jb2RlZFZhbHVlXG4gICAgICAgIC5zdWJzdHIoMCwgY2FwYWNpdHkgLSBlbmNvZGVkTmFtZUFuZFNlcC5sZW5ndGggLSAxKVxuICAgICAgICAvLyBEb24ndCBlbmQgd2l0aCBhIHBhcnRpYWxseSB0cnVuY2F0ZWQgZXNjYXBlIHNlcXVlbmNlXG4gICAgICAgIC5yZXBsYWNlKC8lXFx3PyQvLCAnJyk7XG4gICAgICBpZiAodHJ1bmNhdGVkVmFsdWUpIHtcbiAgICAgICAgZW5jb2RlZFBhcmFtcy5wdXNoKGVuY29kZWROYW1lQW5kU2VwICsgdHJ1bmNhdGVkVmFsdWUpO1xuICAgICAgfVxuICAgICAgaWYgKGVuY29kZWRUcnVuY2F0aW9uUGFyYW0pIHtcbiAgICAgICAgZW5jb2RlZFBhcmFtcy5wdXNoKGVuY29kZWRUcnVuY2F0aW9uUGFyYW0pO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGVuY29kZWRQYXJhbXMucHVzaChlbmNvZGVkTmFtZUFuZFNlcCArIGVuY29kZWRWYWx1ZSk7XG4gICAgY2FwYWNpdHkgLT0gZnVsbExlbmd0aDtcbiAgfVxuICBpZiAoIWVuY29kZWRQYXJhbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGJhc2VVcmw7XG4gIH1cbiAgcmV0dXJuIGJhc2VVcmwgKyAnPycgKyBlbmNvZGVkUGFyYW1zLmpvaW4oJyYnKTtcbn1cbiJdfQ==
// /Users/mszylkowski/src/amphtml/ads/google/a4a/shared/url-builder.js