/**
 * Copyright 2015 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { urls } from "./config";
import { DomFingerprint } from "./core/dom/fingerprint";
import { getLengthNumeral } from "./core/dom/layout";
import { getPageLayoutBoxBlocking } from "./core/dom/layout/page-layout-box";
import { dict } from "./core/types/object";
import { experimentToggles, isCanary } from "./experiments";
import { internalRuntimeVersion } from "./internal-version";
import { getModeObject } from "./mode-object";
import { Services } from "./service";

/**
 * Produces the attributes for the ad template.
 * @param {!Window} parentWindow
 * @param {!AmpElement} element
 * @param {string} sentinel
 * @param {!JsonObject=} attributes
 * @return {!JsonObject}
 */
export function getContextMetadata(parentWindow, element, sentinel, attributes) {
  var startTime = Date.now();
  var width = element.getAttribute('width');
  var height = element.getAttribute('height');
  attributes = attributes ? attributes : dict();
  attributes['width'] = getLengthNumeral(width);
  attributes['height'] = getLengthNumeral(height);

  if (element.getAttribute('title')) {
    attributes['title'] = element.getAttribute('title');
  }

  var locationHref = parentWindow.location.href;

  // This is really only needed for tests, but whatever. Children
  // see us as the logical origin, so telling them we are about:srcdoc
  // will fail ancestor checks.
  if (locationHref == 'about:srcdoc') {
    locationHref = parentWindow.parent.location.href;
  }

  var ampdoc = Services.ampdoc(element);
  var docInfo = Services.documentInfoForDoc(element);
  var viewer = Services.viewerForDoc(element);
  var referrer = viewer.getUnconfirmedReferrerUrl();
  var layoutRect = getPageLayoutBoxBlocking(element);
  // Use JsonObject to preserve field names so that ampContext can access
  // values with name
  // ampcontext.js and this file are compiled in different compilation unit
  // Note: Field names can by perserved by using JsonObject, or by adding
  // perserved name to extern. We are doing both right now.
  // Please also add new introduced variable
  // name to the extern list.
  attributes['_context'] = dict({
    'ampcontextVersion': internalRuntimeVersion(),
    'ampcontextFilepath': urls.thirdParty + "/" + internalRuntimeVersion() + "/ampcontext-v0.js",
    'sourceUrl': docInfo.sourceUrl,
    'referrer': referrer,
    'canonicalUrl': docInfo.canonicalUrl,
    'pageViewId': docInfo.pageViewId,
    'location': {
      'href': locationHref
    },
    'startTime': startTime,
    'tagName': element.tagName,
    'mode': getModeObject(),
    'canary': isCanary(parentWindow),
    'hidden': !ampdoc.isVisible(),
    'initialLayoutRect': layoutRect ? {
      'left': layoutRect.left,
      'top': layoutRect.top,
      'width': layoutRect.width,
      'height': layoutRect.height
    } : null,
    'domFingerprint': DomFingerprint.generate(element),
    'experimentToggles': experimentToggles(parentWindow),
    'sentinel': sentinel
  });
  var adSrc = element.getAttribute('src');

  if (adSrc) {
    attributes['src'] = adSrc;
  }

  return attributes;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlmcmFtZS1hdHRyaWJ1dGVzLmpzIl0sIm5hbWVzIjpbInVybHMiLCJEb21GaW5nZXJwcmludCIsImdldExlbmd0aE51bWVyYWwiLCJnZXRQYWdlTGF5b3V0Qm94QmxvY2tpbmciLCJkaWN0IiwiZXhwZXJpbWVudFRvZ2dsZXMiLCJpc0NhbmFyeSIsImludGVybmFsUnVudGltZVZlcnNpb24iLCJnZXRNb2RlT2JqZWN0IiwiU2VydmljZXMiLCJnZXRDb250ZXh0TWV0YWRhdGEiLCJwYXJlbnRXaW5kb3ciLCJlbGVtZW50Iiwic2VudGluZWwiLCJhdHRyaWJ1dGVzIiwic3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIndpZHRoIiwiZ2V0QXR0cmlidXRlIiwiaGVpZ2h0IiwibG9jYXRpb25IcmVmIiwibG9jYXRpb24iLCJocmVmIiwicGFyZW50IiwiYW1wZG9jIiwiZG9jSW5mbyIsImRvY3VtZW50SW5mb0ZvckRvYyIsInZpZXdlciIsInZpZXdlckZvckRvYyIsInJlZmVycmVyIiwiZ2V0VW5jb25maXJtZWRSZWZlcnJlclVybCIsImxheW91dFJlY3QiLCJ0aGlyZFBhcnR5Iiwic291cmNlVXJsIiwiY2Fub25pY2FsVXJsIiwicGFnZVZpZXdJZCIsInRhZ05hbWUiLCJpc1Zpc2libGUiLCJsZWZ0IiwidG9wIiwiZ2VuZXJhdGUiLCJhZFNyYyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUUEsSUFBUjtBQUNBLFNBQVFDLGNBQVI7QUFDQSxTQUFRQyxnQkFBUjtBQUNBLFNBQVFDLHdCQUFSO0FBQ0EsU0FBUUMsSUFBUjtBQUNBLFNBQVFDLGlCQUFSLEVBQTJCQyxRQUEzQjtBQUNBLFNBQVFDLHNCQUFSO0FBQ0EsU0FBUUMsYUFBUjtBQUNBLFNBQVFDLFFBQVI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0Msa0JBQVQsQ0FDTEMsWUFESyxFQUVMQyxPQUZLLEVBR0xDLFFBSEssRUFJTEMsVUFKSyxFQUtMO0FBQ0EsTUFBTUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLEdBQUwsRUFBbEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdOLE9BQU8sQ0FBQ08sWUFBUixDQUFxQixPQUFyQixDQUFkO0FBQ0EsTUFBTUMsTUFBTSxHQUFHUixPQUFPLENBQUNPLFlBQVIsQ0FBcUIsUUFBckIsQ0FBZjtBQUNBTCxFQUFBQSxVQUFVLEdBQUdBLFVBQVUsR0FBR0EsVUFBSCxHQUFnQlYsSUFBSSxFQUEzQztBQUNBVSxFQUFBQSxVQUFVLENBQUMsT0FBRCxDQUFWLEdBQXNCWixnQkFBZ0IsQ0FBQ2dCLEtBQUQsQ0FBdEM7QUFDQUosRUFBQUEsVUFBVSxDQUFDLFFBQUQsQ0FBVixHQUF1QlosZ0JBQWdCLENBQUNrQixNQUFELENBQXZDOztBQUNBLE1BQUlSLE9BQU8sQ0FBQ08sWUFBUixDQUFxQixPQUFyQixDQUFKLEVBQW1DO0FBQ2pDTCxJQUFBQSxVQUFVLENBQUMsT0FBRCxDQUFWLEdBQXNCRixPQUFPLENBQUNPLFlBQVIsQ0FBcUIsT0FBckIsQ0FBdEI7QUFDRDs7QUFDRCxNQUFJRSxZQUFZLEdBQUdWLFlBQVksQ0FBQ1csUUFBYixDQUFzQkMsSUFBekM7O0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSUYsWUFBWSxJQUFJLGNBQXBCLEVBQW9DO0FBQ2xDQSxJQUFBQSxZQUFZLEdBQUdWLFlBQVksQ0FBQ2EsTUFBYixDQUFvQkYsUUFBcEIsQ0FBNkJDLElBQTVDO0FBQ0Q7O0FBRUQsTUFBTUUsTUFBTSxHQUFHaEIsUUFBUSxDQUFDZ0IsTUFBVCxDQUFnQmIsT0FBaEIsQ0FBZjtBQUNBLE1BQU1jLE9BQU8sR0FBR2pCLFFBQVEsQ0FBQ2tCLGtCQUFULENBQTRCZixPQUE1QixDQUFoQjtBQUNBLE1BQU1nQixNQUFNLEdBQUduQixRQUFRLENBQUNvQixZQUFULENBQXNCakIsT0FBdEIsQ0FBZjtBQUNBLE1BQU1rQixRQUFRLEdBQUdGLE1BQU0sQ0FBQ0cseUJBQVAsRUFBakI7QUFFQSxNQUFNQyxVQUFVLEdBQUc3Qix3QkFBd0IsQ0FBQ1MsT0FBRCxDQUEzQztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FFLEVBQUFBLFVBQVUsQ0FBQyxVQUFELENBQVYsR0FBeUJWLElBQUksQ0FBQztBQUM1Qix5QkFBcUJHLHNCQUFzQixFQURmO0FBRTVCLDBCQUNFUCxJQUFJLENBQUNpQyxVQURQLFNBRUkxQixzQkFBc0IsRUFGMUIsc0JBRjRCO0FBSzVCLGlCQUFhbUIsT0FBTyxDQUFDUSxTQUxPO0FBTTVCLGdCQUFZSixRQU5nQjtBQU81QixvQkFBZ0JKLE9BQU8sQ0FBQ1MsWUFQSTtBQVE1QixrQkFBY1QsT0FBTyxDQUFDVSxVQVJNO0FBUzVCLGdCQUFZO0FBQ1YsY0FBUWY7QUFERSxLQVRnQjtBQVk1QixpQkFBYU4sU0FaZTtBQWE1QixlQUFXSCxPQUFPLENBQUN5QixPQWJTO0FBYzVCLFlBQVE3QixhQUFhLEVBZE87QUFlNUIsY0FBVUYsUUFBUSxDQUFDSyxZQUFELENBZlU7QUFnQjVCLGNBQVUsQ0FBQ2MsTUFBTSxDQUFDYSxTQUFQLEVBaEJpQjtBQWlCNUIseUJBQXFCTixVQUFVLEdBQzNCO0FBQ0UsY0FBUUEsVUFBVSxDQUFDTyxJQURyQjtBQUVFLGFBQU9QLFVBQVUsQ0FBQ1EsR0FGcEI7QUFHRSxlQUFTUixVQUFVLENBQUNkLEtBSHRCO0FBSUUsZ0JBQVVjLFVBQVUsQ0FBQ1o7QUFKdkIsS0FEMkIsR0FPM0IsSUF4QndCO0FBeUI1QixzQkFBa0JuQixjQUFjLENBQUN3QyxRQUFmLENBQXdCN0IsT0FBeEIsQ0F6QlU7QUEwQjVCLHlCQUFxQlAsaUJBQWlCLENBQUNNLFlBQUQsQ0ExQlY7QUEyQjVCLGdCQUFZRTtBQTNCZ0IsR0FBRCxDQUE3QjtBQTZCQSxNQUFNNkIsS0FBSyxHQUFHOUIsT0FBTyxDQUFDTyxZQUFSLENBQXFCLEtBQXJCLENBQWQ7O0FBQ0EsTUFBSXVCLEtBQUosRUFBVztBQUNUNUIsSUFBQUEsVUFBVSxDQUFDLEtBQUQsQ0FBVixHQUFvQjRCLEtBQXBCO0FBQ0Q7O0FBQ0QsU0FBTzVCLFVBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTUgVGhlIEFNUCBIVE1MIEF1dGhvcnMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUy1JU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHt1cmxzfSBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQge0RvbUZpbmdlcnByaW50fSBmcm9tICcuL2NvcmUvZG9tL2ZpbmdlcnByaW50JztcbmltcG9ydCB7Z2V0TGVuZ3RoTnVtZXJhbH0gZnJvbSAnLi9jb3JlL2RvbS9sYXlvdXQnO1xuaW1wb3J0IHtnZXRQYWdlTGF5b3V0Qm94QmxvY2tpbmd9IGZyb20gJy4vY29yZS9kb20vbGF5b3V0L3BhZ2UtbGF5b3V0LWJveCc7XG5pbXBvcnQge2RpY3R9IGZyb20gJy4vY29yZS90eXBlcy9vYmplY3QnO1xuaW1wb3J0IHtleHBlcmltZW50VG9nZ2xlcywgaXNDYW5hcnl9IGZyb20gJy4vZXhwZXJpbWVudHMnO1xuaW1wb3J0IHtpbnRlcm5hbFJ1bnRpbWVWZXJzaW9ufSBmcm9tICcuL2ludGVybmFsLXZlcnNpb24nO1xuaW1wb3J0IHtnZXRNb2RlT2JqZWN0fSBmcm9tICcuL21vZGUtb2JqZWN0JztcbmltcG9ydCB7U2VydmljZXN9IGZyb20gJy4vc2VydmljZSc7XG5cbi8qKlxuICogUHJvZHVjZXMgdGhlIGF0dHJpYnV0ZXMgZm9yIHRoZSBhZCB0ZW1wbGF0ZS5cbiAqIEBwYXJhbSB7IVdpbmRvd30gcGFyZW50V2luZG93XG4gKiBAcGFyYW0geyFBbXBFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gc2VudGluZWxcbiAqIEBwYXJhbSB7IUpzb25PYmplY3Q9fSBhdHRyaWJ1dGVzXG4gKiBAcmV0dXJuIHshSnNvbk9iamVjdH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHRNZXRhZGF0YShcbiAgcGFyZW50V2luZG93LFxuICBlbGVtZW50LFxuICBzZW50aW5lbCxcbiAgYXR0cmlidXRlc1xuKSB7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gIGNvbnN0IHdpZHRoID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gIGNvbnN0IGhlaWdodCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKTtcbiAgYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXMgPyBhdHRyaWJ1dGVzIDogZGljdCgpO1xuICBhdHRyaWJ1dGVzWyd3aWR0aCddID0gZ2V0TGVuZ3RoTnVtZXJhbCh3aWR0aCk7XG4gIGF0dHJpYnV0ZXNbJ2hlaWdodCddID0gZ2V0TGVuZ3RoTnVtZXJhbChoZWlnaHQpO1xuICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykpIHtcbiAgICBhdHRyaWJ1dGVzWyd0aXRsZSddID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJyk7XG4gIH1cbiAgbGV0IGxvY2F0aW9uSHJlZiA9IHBhcmVudFdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICAvLyBUaGlzIGlzIHJlYWxseSBvbmx5IG5lZWRlZCBmb3IgdGVzdHMsIGJ1dCB3aGF0ZXZlci4gQ2hpbGRyZW5cbiAgLy8gc2VlIHVzIGFzIHRoZSBsb2dpY2FsIG9yaWdpbiwgc28gdGVsbGluZyB0aGVtIHdlIGFyZSBhYm91dDpzcmNkb2NcbiAgLy8gd2lsbCBmYWlsIGFuY2VzdG9yIGNoZWNrcy5cbiAgaWYgKGxvY2F0aW9uSHJlZiA9PSAnYWJvdXQ6c3JjZG9jJykge1xuICAgIGxvY2F0aW9uSHJlZiA9IHBhcmVudFdpbmRvdy5wYXJlbnQubG9jYXRpb24uaHJlZjtcbiAgfVxuXG4gIGNvbnN0IGFtcGRvYyA9IFNlcnZpY2VzLmFtcGRvYyhlbGVtZW50KTtcbiAgY29uc3QgZG9jSW5mbyA9IFNlcnZpY2VzLmRvY3VtZW50SW5mb0ZvckRvYyhlbGVtZW50KTtcbiAgY29uc3Qgdmlld2VyID0gU2VydmljZXMudmlld2VyRm9yRG9jKGVsZW1lbnQpO1xuICBjb25zdCByZWZlcnJlciA9IHZpZXdlci5nZXRVbmNvbmZpcm1lZFJlZmVycmVyVXJsKCk7XG5cbiAgY29uc3QgbGF5b3V0UmVjdCA9IGdldFBhZ2VMYXlvdXRCb3hCbG9ja2luZyhlbGVtZW50KTtcblxuICAvLyBVc2UgSnNvbk9iamVjdCB0byBwcmVzZXJ2ZSBmaWVsZCBuYW1lcyBzbyB0aGF0IGFtcENvbnRleHQgY2FuIGFjY2Vzc1xuICAvLyB2YWx1ZXMgd2l0aCBuYW1lXG4gIC8vIGFtcGNvbnRleHQuanMgYW5kIHRoaXMgZmlsZSBhcmUgY29tcGlsZWQgaW4gZGlmZmVyZW50IGNvbXBpbGF0aW9uIHVuaXRcblxuICAvLyBOb3RlOiBGaWVsZCBuYW1lcyBjYW4gYnkgcGVyc2VydmVkIGJ5IHVzaW5nIEpzb25PYmplY3QsIG9yIGJ5IGFkZGluZ1xuICAvLyBwZXJzZXJ2ZWQgbmFtZSB0byBleHRlcm4uIFdlIGFyZSBkb2luZyBib3RoIHJpZ2h0IG5vdy5cbiAgLy8gUGxlYXNlIGFsc28gYWRkIG5ldyBpbnRyb2R1Y2VkIHZhcmlhYmxlXG4gIC8vIG5hbWUgdG8gdGhlIGV4dGVybiBsaXN0LlxuICBhdHRyaWJ1dGVzWydfY29udGV4dCddID0gZGljdCh7XG4gICAgJ2FtcGNvbnRleHRWZXJzaW9uJzogaW50ZXJuYWxSdW50aW1lVmVyc2lvbigpLFxuICAgICdhbXBjb250ZXh0RmlsZXBhdGgnOiBgJHtcbiAgICAgIHVybHMudGhpcmRQYXJ0eVxuICAgIH0vJHtpbnRlcm5hbFJ1bnRpbWVWZXJzaW9uKCl9L2FtcGNvbnRleHQtdjAuanNgLFxuICAgICdzb3VyY2VVcmwnOiBkb2NJbmZvLnNvdXJjZVVybCxcbiAgICAncmVmZXJyZXInOiByZWZlcnJlcixcbiAgICAnY2Fub25pY2FsVXJsJzogZG9jSW5mby5jYW5vbmljYWxVcmwsXG4gICAgJ3BhZ2VWaWV3SWQnOiBkb2NJbmZvLnBhZ2VWaWV3SWQsXG4gICAgJ2xvY2F0aW9uJzoge1xuICAgICAgJ2hyZWYnOiBsb2NhdGlvbkhyZWYsXG4gICAgfSxcbiAgICAnc3RhcnRUaW1lJzogc3RhcnRUaW1lLFxuICAgICd0YWdOYW1lJzogZWxlbWVudC50YWdOYW1lLFxuICAgICdtb2RlJzogZ2V0TW9kZU9iamVjdCgpLFxuICAgICdjYW5hcnknOiBpc0NhbmFyeShwYXJlbnRXaW5kb3cpLFxuICAgICdoaWRkZW4nOiAhYW1wZG9jLmlzVmlzaWJsZSgpLFxuICAgICdpbml0aWFsTGF5b3V0UmVjdCc6IGxheW91dFJlY3RcbiAgICAgID8ge1xuICAgICAgICAgICdsZWZ0JzogbGF5b3V0UmVjdC5sZWZ0LFxuICAgICAgICAgICd0b3AnOiBsYXlvdXRSZWN0LnRvcCxcbiAgICAgICAgICAnd2lkdGgnOiBsYXlvdXRSZWN0LndpZHRoLFxuICAgICAgICAgICdoZWlnaHQnOiBsYXlvdXRSZWN0LmhlaWdodCxcbiAgICAgICAgfVxuICAgICAgOiBudWxsLFxuICAgICdkb21GaW5nZXJwcmludCc6IERvbUZpbmdlcnByaW50LmdlbmVyYXRlKGVsZW1lbnQpLFxuICAgICdleHBlcmltZW50VG9nZ2xlcyc6IGV4cGVyaW1lbnRUb2dnbGVzKHBhcmVudFdpbmRvdyksXG4gICAgJ3NlbnRpbmVsJzogc2VudGluZWwsXG4gIH0pO1xuICBjb25zdCBhZFNyYyA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdzcmMnKTtcbiAgaWYgKGFkU3JjKSB7XG4gICAgYXR0cmlidXRlc1snc3JjJ10gPSBhZFNyYztcbiAgfVxuICByZXR1cm4gYXR0cmlidXRlcztcbn1cbiJdfQ==
// /Users/mszylkowski/src/amphtml/src/iframe-attributes.js