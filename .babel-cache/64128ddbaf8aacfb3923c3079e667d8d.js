/**
 * Copyright 2018 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { computedStyle } from "../../../src/core/dom/style";

/**
 *  Returns the min opacity found amongst the element and its ancestors
 *  @param {?Element} el
 *  @return {number} minimum opacity value
 */
export function getMinOpacity(el) {
  var parentNodeTree = getElementNodeTree(el.parentElement);
  parentNodeTree.push(el);
  var minOpacityFound = 1;
  var opacity;

  for (var i = 0; i < parentNodeTree.length; i++) {
    var node = parentNodeTree[i];
    opacity = getElementOpacity(node);

    if (opacity < minOpacityFound) {
      minOpacityFound = opacity;
    }

    if (minOpacityFound === 0) {
      return minOpacityFound;
    }
  }

  return minOpacityFound;
}

/**
 * Returns the Opacity value of the element.
 * @param {!Element} el
 * @return {number}
 */
function getElementOpacity(el) {
  var win = window;
  var fullyVisibleValue = 1;
  var fullyHiddenValue = 0;

  if (!el) {
    return fullyVisibleValue;
  }

  var _computedStyle = computedStyle(win, el),
      opacity = _computedStyle.opacity,
      visibility = _computedStyle.visibility;

  if (visibility === 'hidden') {
    return fullyHiddenValue;
  }

  var opacityValue = opacity === '' ? fullyVisibleValue : parseFloat(opacity);

  if (isNaN(opacityValue)) {
    return fullyVisibleValue;
  }

  return opacityValue;
}

/**
 * Returns the node tree of the current element starting from
 * the document root
 * @param {?Element} el
 * @return {Array} node list of the element's node tree
 */
function getElementNodeTree(el) {
  var nodeList = [];

  if (!el) {
    return nodeList;
  }

  var CAP = 50;
  var DOCUMENT_NODE_TYPE = 9;
  var ELEMENT_WITH_PARENT_TYPE = 1;
  var parent;
  var element = el;
  nodeList.push(element);

  for (var i = 0; i < CAP; i++) {
    parent = element.parentNode || element.parentElement;

    if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {
      element = parent;
      nodeList.push(element);
    } else if (parent && parent.nodeType == DOCUMENT_NODE_TYPE) {
      parent = element.ownerDocument.defaultView.frameElement;

      if (parent && parent.nodeType == ELEMENT_WITH_PARENT_TYPE) {
        element = parent;
        nodeList.push(element);
      } else {
        break;
      }
    } else {
      break;
    }
  }

  return nodeList;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wYWNpdHkuanMiXSwibmFtZXMiOlsiY29tcHV0ZWRTdHlsZSIsImdldE1pbk9wYWNpdHkiLCJlbCIsInBhcmVudE5vZGVUcmVlIiwiZ2V0RWxlbWVudE5vZGVUcmVlIiwicGFyZW50RWxlbWVudCIsInB1c2giLCJtaW5PcGFjaXR5Rm91bmQiLCJvcGFjaXR5IiwiaSIsImxlbmd0aCIsIm5vZGUiLCJnZXRFbGVtZW50T3BhY2l0eSIsIndpbiIsIndpbmRvdyIsImZ1bGx5VmlzaWJsZVZhbHVlIiwiZnVsbHlIaWRkZW5WYWx1ZSIsInZpc2liaWxpdHkiLCJvcGFjaXR5VmFsdWUiLCJwYXJzZUZsb2F0IiwiaXNOYU4iLCJub2RlTGlzdCIsIkNBUCIsIkRPQ1VNRU5UX05PREVfVFlQRSIsIkVMRU1FTlRfV0lUSF9QQVJFTlRfVFlQRSIsInBhcmVudCIsImVsZW1lbnQiLCJwYXJlbnROb2RlIiwibm9kZVR5cGUiLCJvd25lckRvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJmcmFtZUVsZW1lbnQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLFNBQVFBLGFBQVI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0MsYUFBVCxDQUF1QkMsRUFBdkIsRUFBMkI7QUFDaEMsTUFBTUMsY0FBYyxHQUFHQyxrQkFBa0IsQ0FBQ0YsRUFBRSxDQUFDRyxhQUFKLENBQXpDO0FBQ0FGLEVBQUFBLGNBQWMsQ0FBQ0csSUFBZixDQUFvQkosRUFBcEI7QUFDQSxNQUFJSyxlQUFlLEdBQUcsQ0FBdEI7QUFDQSxNQUFJQyxPQUFKOztBQUVBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR04sY0FBYyxDQUFDTyxNQUFuQyxFQUEyQ0QsQ0FBQyxFQUE1QyxFQUFnRDtBQUM5QyxRQUFNRSxJQUFJLEdBQUdSLGNBQWMsQ0FBQ00sQ0FBRCxDQUEzQjtBQUNBRCxJQUFBQSxPQUFPLEdBQUdJLGlCQUFpQixDQUFDRCxJQUFELENBQTNCOztBQUVBLFFBQUlILE9BQU8sR0FBR0QsZUFBZCxFQUErQjtBQUM3QkEsTUFBQUEsZUFBZSxHQUFHQyxPQUFsQjtBQUNEOztBQUVELFFBQUlELGVBQWUsS0FBSyxDQUF4QixFQUEyQjtBQUN6QixhQUFPQSxlQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPQSxlQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNLLGlCQUFULENBQTJCVixFQUEzQixFQUErQjtBQUM3QixNQUFNVyxHQUFHLEdBQUdDLE1BQVo7QUFDQSxNQUFNQyxpQkFBaUIsR0FBRyxDQUExQjtBQUNBLE1BQU1DLGdCQUFnQixHQUFHLENBQXpCOztBQUVBLE1BQUksQ0FBQ2QsRUFBTCxFQUFTO0FBQ1AsV0FBT2EsaUJBQVA7QUFDRDs7QUFDRCx1QkFBOEJmLGFBQWEsQ0FBQ2EsR0FBRCxFQUFNWCxFQUFOLENBQTNDO0FBQUEsTUFBT00sT0FBUCxrQkFBT0EsT0FBUDtBQUFBLE1BQWdCUyxVQUFoQixrQkFBZ0JBLFVBQWhCOztBQUVBLE1BQUlBLFVBQVUsS0FBSyxRQUFuQixFQUE2QjtBQUMzQixXQUFPRCxnQkFBUDtBQUNEOztBQUNELE1BQU1FLFlBQVksR0FBR1YsT0FBTyxLQUFLLEVBQVosR0FBaUJPLGlCQUFqQixHQUFxQ0ksVUFBVSxDQUFDWCxPQUFELENBQXBFOztBQUVBLE1BQUlZLEtBQUssQ0FBQ0YsWUFBRCxDQUFULEVBQXlCO0FBQ3ZCLFdBQU9ILGlCQUFQO0FBQ0Q7O0FBRUQsU0FBT0csWUFBUDtBQUNEOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNkLGtCQUFULENBQTRCRixFQUE1QixFQUFnQztBQUM5QixNQUFNbUIsUUFBUSxHQUFHLEVBQWpCOztBQUNBLE1BQUksQ0FBQ25CLEVBQUwsRUFBUztBQUNQLFdBQU9tQixRQUFQO0FBQ0Q7O0FBRUQsTUFBTUMsR0FBRyxHQUFHLEVBQVo7QUFDQSxNQUFNQyxrQkFBa0IsR0FBRyxDQUEzQjtBQUNBLE1BQU1DLHdCQUF3QixHQUFHLENBQWpDO0FBQ0EsTUFBSUMsTUFBSjtBQUNBLE1BQUlDLE9BQU8sR0FBR3hCLEVBQWQ7QUFDQW1CLEVBQUFBLFFBQVEsQ0FBQ2YsSUFBVCxDQUFjb0IsT0FBZDs7QUFFQSxPQUFLLElBQUlqQixDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHYSxHQUFwQixFQUF5QmIsQ0FBQyxFQUExQixFQUE4QjtBQUM1QmdCLElBQUFBLE1BQU0sR0FBR0MsT0FBTyxDQUFDQyxVQUFSLElBQXNCRCxPQUFPLENBQUNyQixhQUF2Qzs7QUFFQSxRQUFJb0IsTUFBTSxJQUFJQSxNQUFNLENBQUNHLFFBQVAsSUFBbUJKLHdCQUFqQyxFQUEyRDtBQUN6REUsTUFBQUEsT0FBTyxHQUFHRCxNQUFWO0FBQ0FKLE1BQUFBLFFBQVEsQ0FBQ2YsSUFBVCxDQUFjb0IsT0FBZDtBQUNELEtBSEQsTUFHTyxJQUFJRCxNQUFNLElBQUlBLE1BQU0sQ0FBQ0csUUFBUCxJQUFtQkwsa0JBQWpDLEVBQXFEO0FBQzFERSxNQUFBQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQ0csYUFBUixDQUFzQkMsV0FBdEIsQ0FBa0NDLFlBQTNDOztBQUVBLFVBQUlOLE1BQU0sSUFBSUEsTUFBTSxDQUFDRyxRQUFQLElBQW1CSix3QkFBakMsRUFBMkQ7QUFDekRFLFFBQUFBLE9BQU8sR0FBR0QsTUFBVjtBQUNBSixRQUFBQSxRQUFRLENBQUNmLElBQVQsQ0FBY29CLE9BQWQ7QUFDRCxPQUhELE1BR087QUFDTDtBQUNEO0FBQ0YsS0FUTSxNQVNBO0FBQ0w7QUFDRDtBQUNGOztBQUVELFNBQU9MLFFBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTggVGhlIEFNUCBIVE1MIEF1dGhvcnMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUy1JU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQge2NvbXB1dGVkU3R5bGV9IGZyb20gJyNjb3JlL2RvbS9zdHlsZSc7XG5cbi8qKlxuICogIFJldHVybnMgdGhlIG1pbiBvcGFjaXR5IGZvdW5kIGFtb25nc3QgdGhlIGVsZW1lbnQgYW5kIGl0cyBhbmNlc3RvcnNcbiAqICBAcGFyYW0gez9FbGVtZW50fSBlbFxuICogIEByZXR1cm4ge251bWJlcn0gbWluaW11bSBvcGFjaXR5IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRNaW5PcGFjaXR5KGVsKSB7XG4gIGNvbnN0IHBhcmVudE5vZGVUcmVlID0gZ2V0RWxlbWVudE5vZGVUcmVlKGVsLnBhcmVudEVsZW1lbnQpO1xuICBwYXJlbnROb2RlVHJlZS5wdXNoKGVsKTtcbiAgbGV0IG1pbk9wYWNpdHlGb3VuZCA9IDE7XG4gIGxldCBvcGFjaXR5O1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGFyZW50Tm9kZVRyZWUubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBub2RlID0gcGFyZW50Tm9kZVRyZWVbaV07XG4gICAgb3BhY2l0eSA9IGdldEVsZW1lbnRPcGFjaXR5KG5vZGUpO1xuXG4gICAgaWYgKG9wYWNpdHkgPCBtaW5PcGFjaXR5Rm91bmQpIHtcbiAgICAgIG1pbk9wYWNpdHlGb3VuZCA9IG9wYWNpdHk7XG4gICAgfVxuXG4gICAgaWYgKG1pbk9wYWNpdHlGb3VuZCA9PT0gMCkge1xuICAgICAgcmV0dXJuIG1pbk9wYWNpdHlGb3VuZDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWluT3BhY2l0eUZvdW5kO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIE9wYWNpdHkgdmFsdWUgb2YgdGhlIGVsZW1lbnQuXG4gKiBAcGFyYW0geyFFbGVtZW50fSBlbFxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5mdW5jdGlvbiBnZXRFbGVtZW50T3BhY2l0eShlbCkge1xuICBjb25zdCB3aW4gPSB3aW5kb3c7XG4gIGNvbnN0IGZ1bGx5VmlzaWJsZVZhbHVlID0gMTtcbiAgY29uc3QgZnVsbHlIaWRkZW5WYWx1ZSA9IDA7XG5cbiAgaWYgKCFlbCkge1xuICAgIHJldHVybiBmdWxseVZpc2libGVWYWx1ZTtcbiAgfVxuICBjb25zdCB7b3BhY2l0eSwgdmlzaWJpbGl0eX0gPSBjb21wdXRlZFN0eWxlKHdpbiwgZWwpO1xuXG4gIGlmICh2aXNpYmlsaXR5ID09PSAnaGlkZGVuJykge1xuICAgIHJldHVybiBmdWxseUhpZGRlblZhbHVlO1xuICB9XG4gIGNvbnN0IG9wYWNpdHlWYWx1ZSA9IG9wYWNpdHkgPT09ICcnID8gZnVsbHlWaXNpYmxlVmFsdWUgOiBwYXJzZUZsb2F0KG9wYWNpdHkpO1xuXG4gIGlmIChpc05hTihvcGFjaXR5VmFsdWUpKSB7XG4gICAgcmV0dXJuIGZ1bGx5VmlzaWJsZVZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9wYWNpdHlWYWx1ZTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBub2RlIHRyZWUgb2YgdGhlIGN1cnJlbnQgZWxlbWVudCBzdGFydGluZyBmcm9tXG4gKiB0aGUgZG9jdW1lbnQgcm9vdFxuICogQHBhcmFtIHs/RWxlbWVudH0gZWxcbiAqIEByZXR1cm4ge0FycmF5fSBub2RlIGxpc3Qgb2YgdGhlIGVsZW1lbnQncyBub2RlIHRyZWVcbiAqL1xuZnVuY3Rpb24gZ2V0RWxlbWVudE5vZGVUcmVlKGVsKSB7XG4gIGNvbnN0IG5vZGVMaXN0ID0gW107XG4gIGlmICghZWwpIHtcbiAgICByZXR1cm4gbm9kZUxpc3Q7XG4gIH1cblxuICBjb25zdCBDQVAgPSA1MDtcbiAgY29uc3QgRE9DVU1FTlRfTk9ERV9UWVBFID0gOTtcbiAgY29uc3QgRUxFTUVOVF9XSVRIX1BBUkVOVF9UWVBFID0gMTtcbiAgbGV0IHBhcmVudDtcbiAgbGV0IGVsZW1lbnQgPSBlbDtcbiAgbm9kZUxpc3QucHVzaChlbGVtZW50KTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IENBUDsgaSsrKSB7XG4gICAgcGFyZW50ID0gZWxlbWVudC5wYXJlbnROb2RlIHx8IGVsZW1lbnQucGFyZW50RWxlbWVudDtcblxuICAgIGlmIChwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlID09IEVMRU1FTlRfV0lUSF9QQVJFTlRfVFlQRSkge1xuICAgICAgZWxlbWVudCA9IHBhcmVudDtcbiAgICAgIG5vZGVMaXN0LnB1c2goZWxlbWVudCk7XG4gICAgfSBlbHNlIGlmIChwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlID09IERPQ1VNRU5UX05PREVfVFlQRSkge1xuICAgICAgcGFyZW50ID0gZWxlbWVudC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3LmZyYW1lRWxlbWVudDtcblxuICAgICAgaWYgKHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgPT0gRUxFTUVOVF9XSVRIX1BBUkVOVF9UWVBFKSB7XG4gICAgICAgIGVsZW1lbnQgPSBwYXJlbnQ7XG4gICAgICAgIG5vZGVMaXN0LnB1c2goZWxlbWVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5vZGVMaXN0O1xufVxuIl19
// /Users/mszylkowski/src/amphtml/extensions/amp-analytics/0.1/opacity.js