var _templateObject, _templateObject2;

function _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }

/**
 * Copyright 2020 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS-IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Services } from "../../../src/service";
import { htmlFor } from "../../../src/core/dom/static-template";
import { setStyles } from "../../../src/core/dom/style";

/**
 * Generates the template for the confetti wrapper.
 *
 * @param {!Element} element
 * @return {!Element}
 */
var buildConfettiWrapperTemplate = function buildConfettiWrapperTemplate(element) {
  var html = htmlFor(element);
  return html(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["\n    <div\n      class=\"i-amphtml-story-interactive-confetti-wrapper\"\n      aria-hidden=\"true\"\n    ></div>\n  "])));
};

/**
 * Generates a template for a confetti.
 *
 * @param {!Element} element
 * @return {!Element}
 */
var buildconfettiTemplate = function buildconfettiTemplate(element) {
  var html = htmlFor(element);
  return html(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([" <div class=\"i-amphtml-story-interactive-confetti\"></div> "])));
};

/**
 * Creates a radial burst of emoji.
 * The burst begins from the center of the parent element and
 * animates to the edges of the parent element.
 * Nodes are removed from the dom at the end of the animation.
 *
 * @param {!Element} rootEl
 * @param {!Window} win
 * @param {string} confettiEmoji
 * @return {void}
 */
export function emojiConfetti(rootEl, win, confettiEmoji) {
  var confettiCount = 5;
  var angleSlice = Math.PI * 2 / confettiCount;
  var angleRandomness = angleSlice * 0.2;
  var fontSizeRandomRange = [30, 50];
  var rotationRandomness = 20;
  var additionalDistance = 5;
  var animationTime = 300;
  var animationOutDelay = 1000;
  // To calculate confetti transform distance.
  var rootElRect = rootEl.
  /*OK*/
  getBoundingClientRect();

  /** @private @const {!../../../src/service/timer-impl.Timer} */
  var timer = Services.timerFor(win);
  var confettiWrapper = buildConfettiWrapperTemplate(rootEl);
  rootEl.appendChild(confettiWrapper);
  timer.delay(function () {
    // Generate confetti. Set their ending position, size and rotation.
    for (var i = 0; i < confettiCount; i++) {
      var confetti = buildconfettiTemplate(rootEl);
      confettiWrapper.appendChild(confetti);
      confetti.textContent = confettiEmoji;
      var fontSize = randomInRange(fontSizeRandomRange[0], fontSizeRandomRange[1]) + 'px';
      var angle = angleSlice * i + randomInRange(-angleRandomness, angleRandomness);
      var x = Math.sin(angle) * (rootElRect.width / 2 + additionalDistance);
      var y = Math.cos(angle) * (rootElRect.height / 2 + additionalDistance);
      var rotation = randomInRange(-rotationRandomness, rotationRandomness);
      setStyles(confetti, {
        fontSize: fontSize,
        transform: "translate(" + x + "px, " + y + "px) rotate(" + rotation + "deg)"
      });
    }

    // Scale up confetti container.
    confettiWrapper.classList.add('i-amphtml-story-interactive-confetti-wrapper-animate-in');
    // Animate out the wrapper
    timer.delay(function () {
      confettiWrapper.classList.add('i-amphtml-story-interactive-confetti-wrapper-animate-out');
      // Remove the wrapper from the dom.
      timer.delay(function () {
        return rootEl.removeChild(confettiWrapper);
      }, animationTime);
    }, animationOutDelay);
  }, animationTime);
}

/**
 * Returns a random number between the min and max values.
 *
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
function randomInRange(min, max) {
  return Math.random() * (max - min) + min;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
// /Users/mszylkowski/src/amphtml/extensions/amp-story-interactive/0.1/interactive-confetti.js