workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "20143a84dbba9fe6b7b9dd4f08d877382be7f3e954c3cabfe23b374264f4d8c0",
    strip_prefix = "abseil-cpp-747f9c9fd244016e1d3da41f51b17aa03b96d6d3",
    urls = ["https://github.com/abseil/abseil-cpp/archive/747f9c9fd244016e1d3da41f51b17aa03b96d6d3.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "8bbdd83d20cba313cbf82d6587cdb5cf8bf82ec223ff25159c2d012630164617",
    strip_prefix = "googletest-eb2d85edd0bff7a712b6aff147cd9f789f0d7d0b",
    urls = ["https://github.com/google/googletest/archive/eb2d85edd0bff7a712b6aff147cd9f789f0d7d0b.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "ab83e143103c12d3adac51a89987fd76a5ca0d7a1b1cd77be90a76c2b705cfec",
    strip_prefix = "protobuf-eb36877a26526bb94d64e8812b3c05cf073da024",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/eb36877a26526bb94d64e8812b3c05cf073da024.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "972d80c6fa2460f929afee5df66f62b58b9e0d8c48cc021ef759d21679837c95",
    strip_prefix = "gflags-52e94563eba1968783864942fedf6e87e3c611f4",
    urls = ["https://github.com/gflags/gflags/archive/52e94563eba1968783864942fedf6e87e3c611f4.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "0579b138261185cf4c785e412b68af080524c40feb6f2f8b8f97dbd533767759",
    strip_prefix = "re2-6569a9a3df256f4c0c3813cb8ee2f8eef6e2c1fb",
    urls = ["https://github.com/google/re2/archive/6569a9a3df256f4c0c3813cb8ee2f8eef6e2c1fb.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "97575013387d41f2ec2c10148c5ef331cdddc0654a8ec2e88c81e43d7c458ba6",
    strip_prefix = "rules_cc-8c3abd393a3aace8f07e0d8b923054f14893fbef",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/8c3abd393a3aace8f07e0d8b923054f14893fbef.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "f2b2eb422d010c06ae0067e297c364aa35515e095cf319867a741a32cf9cc52f",
    strip_prefix = "rules_proto-dcd61fec58ad7d9fa49a3736a2afbce29cf927c2",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/dcd61fec58ad7d9fa49a3736a2afbce29cf927c2.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/dcd61fec58ad7d9fa49a3736a2afbce29cf927c2.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "f4218f8dea1b06ca216648a6789e191ac916c99e2947290424cc1e49c6a054b4",
    strip_prefix = "emsdk-b71731aa1a5870185880c7c8e3b9fcb485209a92/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/b71731aa1a5870185880c7c8e3b9fcb485209a92.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "303f99eb72c47a23a28b8bda1b2c5c14fae4f81788667fb36513a8ab5aaa02a7",
    strip_prefix = "closure-library-b312823ec5f84239ff1db7526f4a75cba0420a33",
    urls = ["https://github.com/google/closure-library/archive/b312823ec5f84239ff1db7526f4a75cba0420a33.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "38c3b21ea0dcf79bbc22d75f36fa57fb53ef2bf5f75e47f8b76af02c4a2abc1b",
    strip_prefix = "rules_closure-0.15.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.15.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.15.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
