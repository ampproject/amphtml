--- original.js	2019-07-22 17:39:16.000000000 -0400
+++ index.js	2019-07-22 17:40:16.000000000 -0400
@@ -3,7 +3,6 @@
 setDOM.KEY = 'data-key'
 setDOM.IGNORE = 'data-ignore'
 setDOM.CHECKSUM = 'data-checksum'
-var parseHTML = require('./parse-html')
 var KEY_PREFIX = '_set-dom-'
 var NODE_MOUNTED = KEY_PREFIX + 'mounted'
 var ELEMENT_TYPE = 1
@@ -13,6 +12,9 @@
 // Expose api.
 module.exports = setDOM
 
+// Flattened array of node pairs that were ignored (via setDOM.IGNORE) in last diff.
+var ignoredNodes = [];
+
 /**
  * @description
  * Updates existing dom to match a new dom.
@@ -21,6 +23,8 @@
  * @param {String|Node} newNode - The updated html(entity).
  */
 function setDOM (oldNode, newNode) {
+  ignoredNodes = [];
+
   // Ensure a realish dom node is provided.
   assert(oldNode && oldNode.nodeType, 'You must provide a valid node to update.')
 
@@ -33,11 +37,7 @@
     setChildNodes(oldNode, newNode)
   } else {
     // Otherwise we diff the entire old node.
-    setNode(oldNode, typeof newNode === 'string'
-      // If a string was provided we will parse it as dom.
-      ? parseHTML(newNode, oldNode.nodeName)
-      : newNode
-    )
+    setNode(oldNode, newNode)
   }
 
   // Trigger mount events on initial set.
@@ -45,6 +45,8 @@
     oldNode[NODE_MOUNTED] = true
     mount(oldNode)
   }
+
+  return ignoredNodes;
 }
 
 /**
@@ -226,9 +228,13 @@
  * @param {Node} b - Another node to compare.
  */
 function isEqualNode (a, b) {
+  const ignored = (isIgnored(a) && isIgnored(b));
+  if (ignored) {
+    ignoredNodes.push(a, b);
+  }
   return (
     // Check if both nodes are ignored.
-    (isIgnored(a) && isIgnored(b)) ||
+    ignored ||
     // Check if both nodes have the same checksum.
     (getCheckSum(a) === getCheckSum(b)) ||
     // Fall back to native isEqualNode check.
