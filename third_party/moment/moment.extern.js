/**********************************************************************
 * Extern for moment
 * Generated by http://jmmk.github.io/javascript-externs-generator
 * HANDROLLED EXTERNS AFTER THE GENERATED EXTERNS
 * https://github.com/cljsjs/packages/blob/master/moment/resources/cljsjs/common/moment.ext.js
 **********************************************************************/

 /** @externs */

/**
 * @constructor
 */
const moment = {
  'momentProperties': {},
  'suppressDeprecationWarnings': {},
  'deprecationHandler': {},
  'parseTwoDigitYear': function() { },
  'createFromInputFallback': function() { },
  'ISO_8601': function() { },
  'updateOffset': function() { },
  'defaultFormat': {},
  'defaultFormatUtc': {},
  'lang': function() { },
  'langData': function() { },
  'version': {},
  'fn': {
    'add': function() { },
    'calendar': function() { },
    'clone': function() { },
    'diff': function() { },
    'endOf': function() { },
    'format': function() { },
    'from': function() { },
    'fromNow': function() { },
    'to': function() { },
    'toNow': function() { },
    'get': function() { },
    'invalidAt': function() { },
    'isAfter': function() { },
    'isBefore': function() { },
    'isBetween': function() { },
    'isSame': function() { },
    'isSameOrAfter': function() { },
    'isSameOrBefore': function() { },
    'isValid': function() { },
    'lang': function() { },
    'locale': function() { },
    'localeData': function() { },
    'max': function() { },
    'min': function() { },
    'parsingFlags': function() { },
    'set': function() { },
    'startOf': function() { },
    'subtract': function() { },
    'toArray': function() { },
    'toObject': function() { },
    'toDate': function() { },
    'toISOString': function() { },
    'inspect': function() { },
    'toJSON': function() { },
    'toString': function() { },
    'unix': function() { },
    'valueOf': function() { },
    'creationData': function() { },
    'year': function() { },
    'isLeapYear': function() { },
    'weekYear': function() { },
    'isoWeekYear': function() { },
    'quarters': function() { },
    'quarter': function() { },
    'month': function() { },
    'daysInMonth': function() { },
    'weeks': function() { },
    'week': function() { },
    'isoWeeks': function() { },
    'isoWeek': function() { },
    'weeksInYear': function() { },
    'isoWeeksInYear': function() { },
    'date': function() { },
    'days': function() { },
    'day': function() { },
    'weekday': function() { },
    'isoWeekday': function() { },
    'dayOfYear': function() { },
    'hours': function() { },
    'hour': function() { },
    'minutes': function() { },
    'minute': function() { },
    'seconds': function() { },
    'second': function() { },
    'milliseconds': function() { },
    'millisecond': function() { },
    'utcOffset': function() { },
    'utc': function() { },
    'local': function() { },
    'parseZone': function() { },
    'hasAlignedHourOffset': function() { },
    'isDST': function() { },
    'isLocal': function() { },
    'isUtcOffset': function() { },
    'isUtc': function() { },
    'isUTC': function() { },
    'zoneAbbr': function() { },
    'zoneName': function() { },
    'dates': function() { },
    'months': function() { },
    'years': function() { },
    'zone': function() { },
    'isDSTShifted': function() { },
  },
  'min': function() { },
  'max': function() { },
  'now': function() { },
  'utc': function() { },
  'unix': function() { },
  'months': function() { },
  'isDate': function() { },
  'locale': function() { },
  'invalid': function() { },
  'duration': {
    'fn': {
      'abs': function() { },
      'add': function() { },
      'subtract': function() { },
      'as': function() { },
      'asMilliseconds': function() { },
      'asSeconds': function() { },
      'asMinutes': function() { },
      'asHours': function() { },
      'asDays': function() { },
      'asWeeks': function() { },
      'asMonths': function() { },
      'asYears': function() { },
      'valueOf': function() { },
      '_bubble': function() { },
      'get': function() { },
      'milliseconds': function() { },
      'seconds': function() { },
      'minutes': function() { },
      'hours': function() { },
      'days': function() { },
      'weeks': function() { },
      'months': function() { },
      'years': function() { },
      'humanize': function() { },
      'toISOString': function() { },
      'toString': function() { },
      'toJSON': function() { },
      'locale': function() { },
      'localeData': function() { },
      'toIsoString': function() { },
      'lang': function() { },
    },
  },
  'isMoment': function() { },
  'weekdays': function() { },
  'parseZone': function() { },
  'localeData': function() { },
  'isDuration': function() { },
  'monthsShort': function() { },
  'weekdaysMin': function() { },
  'defineLocale': function() { },
  'updateLocale': function() { },
  'locales': function() { },
  'weekdaysShort': function() { },
  'normalizeUnits': function() { },
  'relativeTimeRounding': function() { },
  'relativeTimeThreshold': function() { },
  'calendarFormat': function() { },
};
moment.prototype = {
  'add': function() { },
  'calendar': function() { },
  'clone': function() { },
  'diff': function() { },
  'endOf': function() { },
  'format': function() { },
  'from': function() { },
  'fromNow': function() { },
  'to': function() { },
  'toNow': function() { },
  'get': function() { },
  'invalidAt': function() { },
  'isAfter': function() { },
  'isBefore': function() { },
  'isBetween': function() { },
  'isSame': function() { },
  'isSameOrAfter': function() { },
  'isSameOrBefore': function() { },
  'isValid': function() { },
  'lang': function() { },
  'locale': function() { },
  'localeData': function() { },
  'max': function() { },
  'min': function() { },
  'parsingFlags': function() { },
  'set': function() { },
  'startOf': function() { },
  'subtract': function() { },
  'toArray': function() { },
  'toObject': function() { },
  'toDate': function() { },
  'toISOString': function() { },
  'inspect': function() { },
  'toJSON': function() { },
  'toString': function() { },
  'unix': function() { },
  'valueOf': function() { },
  'creationData': function() { },
  'year': function() { },
  'isLeapYear': function() { },
  'weekYear': function() { },
  'isoWeekYear': function() { },
  'quarters': function() { },
  'quarter': function() { },
  'month': function() { },
  'daysInMonth': function() { },
  'weeks': function() { },
  'week': function() { },
  'isoWeeks': function() { },
  'isoWeek': function() { },
  'weeksInYear': function() { },
  'isoWeeksInYear': function() { },
  'date': function() { },
  'days': function() { },
  'day': function() { },
  'weekday': function() { },
  'isoWeekday': function() { },
  'dayOfYear': function() { },
  'hours': function() { },
  'hour': function() { },
  'minutes': function() { },
  'minute': function() { },
  'seconds': function() { },
  'second': function() { },
  'milliseconds': function() { },
  'millisecond': function() { },
  'utcOffset': function() { },
  'utc': function() { },
  'local': function() { },
  'parseZone': function() { },
  'hasAlignedHourOffset': function() { },
  'isDST': function() { },
  'isLocal': function() { },
  'isUtcOffset': function() { },
  'isUtc': function() { },
  'isUTC': function() { },
  'zoneAbbr': function() { },
  'zoneName': function() { },
  'dates': function() { },
  'months': function() { },
  'years': function() { },
  'zone': function() { },
  'isDSTShifted': function() { },
};
/**********************************************************************
 * End Generated Extern for moment
/**********************************************************************/

// Moment does not expose the Locale constructor and thus the externs generator
// does not see it. The following is written by hand based on
// <https://github.com/moment/moment/blob/2.17.1/moment.js#L3759-L3795>

moment.Locale = {};
moment.Locale.prototype = {
  'calendar': function() { },
  'longDateFormat': function() { },
  'invalidDate': function() { },
  'ordinal': function() { },
  'preparse': function() { },
  'postformat': function() { },
  'relativeTime': function() { },
  'pastFuture': function() { },
  'set': function() { },
  'months': function() { },
  'monthsShort': function() { },
  'monthsParse': function() { },
  'monthsRegex': function() { },
  'monthsShortRegex': function() { },
  'week': function() { },
  'firstDayOfYear': function() { },
  'firstDayOfWeek': function() { },
  'weekdays': function() { },
  'weekdaysMin': function() { },
  'weekdaysShort': function() { },
  'weekdaysParse': function() { },
  'weekdaysRegex': function() { },
  'weekdaysShortRegex': function() { },
  'weekdaysMinRegex': function() { },
  'isPM': function() { },
  'meridiem': function() { },
};
