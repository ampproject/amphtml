(self.AMP=self.AMP||[]).push({n:"extensions-amp-geo-0.1-amp-geo.js", v:"erwin", f:(function(){var $PRE_RENDER_REGEX$$module$extensions$amp_geo$0_1$amp_geo$$=/amp-iso-country-(\w+)/;
function $AmpGeo$$module$extensions$amp_geo$0_1$amp_geo$$($$jscomp$super$this$jscomp$41_element$jscomp$329$$){$$jscomp$super$this$jscomp$41_element$jscomp$329$$=AMP.BaseElement.call(this,$$jscomp$super$this$jscomp$41_element$jscomp$329$$)||this;$$jscomp$super$this$jscomp$41_element$jscomp$329$$.$mode_$=0;$$jscomp$super$this$jscomp$41_element$jscomp$329$$.$country_$="unknown";$$jscomp$super$this$jscomp$41_element$jscomp$329$$.$matchedGroups_$=[];return $$jscomp$super$this$jscomp$41_element$jscomp$329$$}
$$jscomp$inherits$$($AmpGeo$$module$extensions$amp_geo$0_1$amp_geo$$,AMP.BaseElement);
$AmpGeo$$module$extensions$amp_geo$0_1$amp_geo$$.prototype.buildCallback=function(){var $children$jscomp$10_geo$jscomp$2$$=this.element.children;$children$jscomp$10_geo$jscomp$2$$.length&&$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(1===$children$jscomp$10_geo$jscomp$2$$.length&&$isJsonScriptTag$$module$src$dom$$($children$jscomp$10_geo$jscomp$2$$[0]),'amp-geo can only have one <script type="application/json"> child');$children$jscomp$10_geo$jscomp$2$$=this.$addToBody_$($children$jscomp$10_geo$jscomp$2$$.length?
$parseJson$$module$src$json$$($children$jscomp$10_geo$jscomp$2$$[0].textContent):{});$geoDeferred$$module$extensions$amp_geo$0_1$amp_geo$$.resolve($children$jscomp$10_geo$jscomp$2$$)};
function $JSCompiler_StaticMethods_findCountry_$$($JSCompiler_StaticMethods_findCountry_$self$$,$doc$jscomp$79$$){var $preRenderMatch$$=$doc$jscomp$79$$.body.className.match($PRE_RENDER_REGEX$$module$extensions$amp_geo$0_1$amp_geo$$);$preRenderMatch$$&&!$Services$$module$src$services$urlForDoc$$($doc$jscomp$79$$).isProxyOrigin($doc$jscomp$79$$.location)?($JSCompiler_StaticMethods_findCountry_$self$$.$mode_$=1,$JSCompiler_StaticMethods_findCountry_$self$$.$country_$=$preRenderMatch$$[1]):($JSCompiler_StaticMethods_findCountry_$self$$.$mode_$=
0,$JSCompiler_StaticMethods_findCountry_$self$$.$country_$="{{AMP_ISO_COUNTRY_HOTPATCH}}".trim(),2!==$JSCompiler_StaticMethods_findCountry_$self$$.$country_$.length&&($JSCompiler_StaticMethods_findCountry_$self$$.$country_$="unknown"));$getMode$$module$src$mode$$($JSCompiler_StaticMethods_findCountry_$self$$.win).geoOverride&&$isCanary$$module$src$experiments$$($JSCompiler_StaticMethods_findCountry_$self$$.win)&&/^\w+$/.test($getMode$$module$src$mode$$($JSCompiler_StaticMethods_findCountry_$self$$.win).geoOverride)&&
($JSCompiler_StaticMethods_findCountry_$self$$.$mode_$=2,$JSCompiler_StaticMethods_findCountry_$self$$.$country_$=$getMode$$module$src$mode$$($JSCompiler_StaticMethods_findCountry_$self$$.win).geoOverride.toLowerCase())}
function $JSCompiler_StaticMethods_matchCountryGroups_$$($JSCompiler_StaticMethods_matchCountryGroups_$self$$,$config$jscomp$45$$){var $ISOCountryGroups$$=$config$jscomp$45$$.ISOCountryGroups,$errorPrefix$$="<amp-geo> ISOCountryGroups";$ISOCountryGroups$$&&($user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($isObject$$module$src$types$$($ISOCountryGroups$$),$errorPrefix$$+" must be an object"),Object.keys($ISOCountryGroups$$).forEach(function($config$jscomp$45$$){$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(/^[a-z]+[a-z0-9]*$/i.test($config$jscomp$45$$)&&
!/^amp/.test($config$jscomp$45$$),$errorPrefix$$+"["+$config$jscomp$45$$+"] name is invalid");$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($isArray$$module$src$types$$($ISOCountryGroups$$[$config$jscomp$45$$]),$errorPrefix$$+"["+$config$jscomp$45$$+"] must be an array");$ISOCountryGroups$$[$config$jscomp$45$$]=$ISOCountryGroups$$[$config$jscomp$45$$].map(function($JSCompiler_StaticMethods_matchCountryGroups_$self$$){return $JSCompiler_StaticMethods_matchCountryGroups_$self$$.toLowerCase()});
$ISOCountryGroups$$[$config$jscomp$45$$].includes($JSCompiler_StaticMethods_matchCountryGroups_$self$$.$country_$)&&$JSCompiler_StaticMethods_matchCountryGroups_$self$$.$matchedGroups_$.push($config$jscomp$45$$)}))}
function $JSCompiler_StaticMethods_clearPreRender_$$($classList$jscomp$2_doc$jscomp$80$$){$classList$jscomp$2_doc$jscomp$80$$=$classList$jscomp$2_doc$jscomp$80$$.body.classList;for(var $classesToRemove$$=[],$stripRe$$=/^amp-iso-country-|^amp-geo-group-/i,$i$jscomp$292$$=$classList$jscomp$2_doc$jscomp$80$$.length-1;0<$i$jscomp$292$$;$i$jscomp$292$$--)$stripRe$$.test($classList$jscomp$2_doc$jscomp$80$$[$i$jscomp$292$$])&&$classesToRemove$$.push($classList$jscomp$2_doc$jscomp$80$$[$i$jscomp$292$$]);
return $classesToRemove$$}
$AmpGeo$$module$extensions$amp_geo$0_1$amp_geo$$.prototype.$addToBody_$=function($config$jscomp$46$$){var $$jscomp$this$jscomp$517$$=this,$doc$jscomp$81$$=this.win.document,$states$jscomp$1$$={},$self$jscomp$11$$=this;return $waitForBodyPromise$$module$src$dom$$($doc$jscomp$81$$).then(function(){$JSCompiler_StaticMethods_findCountry_$$($self$jscomp$11$$,$doc$jscomp$81$$);$JSCompiler_StaticMethods_matchCountryGroups_$$($self$jscomp$11$$,$config$jscomp$46$$);var $classesToRemove$jscomp$1$$=[];switch($self$jscomp$11$$.$mode_$){case 2:$classesToRemove$jscomp$1$$=
$JSCompiler_StaticMethods_clearPreRender_$$($doc$jscomp$81$$);case 0:$states$jscomp$1$$.ISOCountry=$self$jscomp$11$$.$country_$;var $classesToAdd$$=$self$jscomp$11$$.$matchedGroups_$.map(function($config$jscomp$46$$){$states$jscomp$1$$[$config$jscomp$46$$]=!0;return"amp-geo-group-"+$config$jscomp$46$$});$self$jscomp$11$$.$matchedGroups_$.length||$classesToAdd$$.push("amp-geo-no-group");$states$jscomp$1$$.ISOCountryGroups=$self$jscomp$11$$.$matchedGroups_$;$classesToAdd$$.push("amp-iso-country-"+$$jscomp$this$jscomp$517$$.$country_$);
$self$jscomp$11$$.mutateElement(function(){var $$jscomp$this$jscomp$517$$=$doc$jscomp$81$$.body.classList;$classesToRemove$jscomp$1$$.push("amp-geo-pending");$classesToRemove$jscomp$1$$.forEach(function($config$jscomp$46$$){return $$jscomp$this$jscomp$517$$.remove($config$jscomp$46$$)});$classesToAdd$$.forEach(function($config$jscomp$46$$){return $$jscomp$this$jscomp$517$$.add($config$jscomp$46$$)});if($config$jscomp$46$$.AmpBind){var $self$jscomp$11$$=$doc$jscomp$81$$.getElementById("ampGeo");$self$jscomp$11$$&&
$self$jscomp$11$$.parentNode.removeChild($self$jscomp$11$$);var $state$jscomp$65$$=$doc$jscomp$81$$.createElement("amp-state"),$confScript$$=$doc$jscomp$81$$.createElement("script");$confScript$$.setAttribute("type","application/json");$confScript$$.textContent=JSON.stringify($states$jscomp$1$$);$state$jscomp$65$$.appendChild($confScript$$);$state$jscomp$65$$.id="ampGeo";$doc$jscomp$81$$.body.appendChild($state$jscomp$65$$)}},$doc$jscomp$81$$.body)}return{ISOCountry:$self$jscomp$11$$.$country_$,ISOCountryGroups:$self$jscomp$11$$.$matchedGroups_$}})};
var $geoDeferred$$module$extensions$amp_geo$0_1$amp_geo$$=null;(function($AMP$jscomp$46$$){$geoDeferred$$module$extensions$amp_geo$0_1$amp_geo$$=new $Deferred$$module$src$utils$promise$$;$AMP$jscomp$46$$.registerElement("amp-geo",$AmpGeo$$module$extensions$amp_geo$0_1$amp_geo$$);$AMP$jscomp$46$$.registerServiceForDoc("geo",function(){return $geoDeferred$$module$extensions$amp_geo$0_1$amp_geo$$.promise})})(self.AMP);})});
//# sourceMappingURL=extensions-amp-geo-0.1-amp-geo.js.map

