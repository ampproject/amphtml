(self.AMP=self.AMP||[]).push({n:"extensions-amp-experiment-0.1-amp-experiment.js", v:"erwin", f:(function(){var $nameValidator$$module$extensions$amp_experiment$0_1$variant$$=/^[\w-]+$/;
function $allocateVariant$$module$extensions$amp_experiment$0_1$variant$$($ampdoc$jscomp$140$$,$experimentName$jscomp$8$$,$config$jscomp$42$$){$assertName$$module$extensions$amp_experiment$0_1$variant$$($experimentName$jscomp$8$$);$validateConfig$$module$extensions$amp_experiment$0_1$variant$$($config$jscomp$42$$);var $override$$=$Services$$module$src$services$viewerForDoc$$($ampdoc$jscomp$140$$).getParam("amp-x-"+$experimentName$jscomp$8$$);if($override$$&&$config$jscomp$42$$.variants.hasOwnProperty($override$$))return Promise.resolve($override$$);
var $sticky$$=!1!==$config$jscomp$42$$.sticky,$cidScope$$=$config$jscomp$42$$.cidScope||"amp-experiment",$hasConsentPromise$$=Promise.resolve(!0);$sticky$$&&$config$jscomp$42$$.consentNotificationId&&($hasConsentPromise$$=$Services$$module$src$services$userNotificationManagerForDoc$$($ampdoc$jscomp$140$$).then(function($ampdoc$jscomp$140$$){return $ampdoc$jscomp$140$$.G($config$jscomp$42$$.consentNotificationId)}).then(function($ampdoc$jscomp$140$$){$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($ampdoc$jscomp$140$$,
"Notification not found: "+$config$jscomp$42$$.consentNotificationId);return $ampdoc$jscomp$140$$.isDismissed()}));return $hasConsentPromise$$.then(function($override$$){if(!$override$$)return null;var $hasConsentPromise$$=$config$jscomp$42$$.group||$experimentName$jscomp$8$$;return $getBucketTicket$$module$extensions$amp_experiment$0_1$variant$$($ampdoc$jscomp$140$$,$hasConsentPromise$$,$sticky$$?$cidScope$$:null).then(function($ampdoc$jscomp$140$$){for(var $experimentName$jscomp$8$$=0,$override$$=
Object.keys($config$jscomp$42$$.variants).sort(),$sticky$$=0;$sticky$$<$override$$.length;$sticky$$++)if($experimentName$jscomp$8$$+=$config$jscomp$42$$.variants[$override$$[$sticky$$]],$ampdoc$jscomp$140$$<$experimentName$jscomp$8$$)return $override$$[$sticky$$];return null})})}
function $validateConfig$$module$extensions$amp_experiment$0_1$variant$$($config$jscomp$43$$){var $variants$jscomp$3$$=$config$jscomp$43$$.variants;$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($isObject$$module$src$types$$($variants$jscomp$3$$)&&0<Object.keys($variants$jscomp$3$$).length,"Missing experiment variants config.");$config$jscomp$43$$.group&&$assertName$$module$extensions$amp_experiment$0_1$variant$$($config$jscomp$43$$.group);var $totalPercentage$$=0,$variantName$$;
for($variantName$$ in $variants$jscomp$3$$)if($variants$jscomp$3$$.hasOwnProperty($variantName$$)){$assertName$$module$extensions$amp_experiment$0_1$variant$$($variantName$$);var $percentage$$=$variants$jscomp$3$$[$variantName$$];$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$("number"===typeof $percentage$$&&0<$percentage$$&&100>$percentage$$,"Invalid percentage %s:%s. Has to be greater than 0 and less than 100",$variantName$$,$percentage$$);$totalPercentage$$+=$percentage$$}$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(100>=
$totalPercentage$$.toFixed(6),"Total percentage is bigger than 100: "+$totalPercentage$$)}
function $getBucketTicket$$module$extensions$amp_experiment$0_1$variant$$($ampdoc$jscomp$141$$,$group$jscomp$1$$,$opt_cidScope$$){if(!$opt_cidScope$$)return Promise.resolve(100*$ampdoc$jscomp$141$$.win.Math.random());var $cidPromise$jscomp$2$$=$Services$$module$src$services$cidForDoc$$($ampdoc$jscomp$141$$).then(function($ampdoc$jscomp$141$$){return $ampdoc$jscomp$141$$.get({scope:$opt_cidScope$$,createCookieIfNotPresent:!0},Promise.resolve())});return Promise.all([$cidPromise$jscomp$2$$,$Services$$module$src$services$cryptoFor$$($ampdoc$jscomp$141$$.win)]).then(function($ampdoc$jscomp$141$$){return $ampdoc$jscomp$141$$[1].uniform($group$jscomp$1$$+
":"+$ampdoc$jscomp$141$$[0])}).then(function($ampdoc$jscomp$141$$){return 100*$ampdoc$jscomp$141$$})}function $assertName$$module$extensions$amp_experiment$0_1$variant$$($name$jscomp$193$$){$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($nameValidator$$module$extensions$amp_experiment$0_1$variant$$.test($name$jscomp$193$$),"Invalid name "+$name$jscomp$193$$+": %s. Allowed chars are [a-zA-Z0-9-_].")};function $AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$($var_args$jscomp$76$$){return AMP.BaseElement.apply(this,arguments)||this}$$jscomp$inherits$$($AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$,AMP.BaseElement);$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.isLayoutSupported=function($layout$jscomp$44$$){return"nodisplay"==$layout$jscomp$44$$||"container"==$layout$jscomp$44$$};
$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.buildCallback=function(){var $$jscomp$this$jscomp$482$$=this,$config$jscomp$44$$=this.$getConfig_$(),$results$jscomp$18$$=Object.create(null),$variants$jscomp$4$$=Object.keys($config$jscomp$44$$).map(function($variants$jscomp$4$$){return $allocateVariant$$module$extensions$amp_experiment$0_1$variant$$($$jscomp$this$jscomp$482$$.getAmpDoc(),$variants$jscomp$4$$,$config$jscomp$44$$[$variants$jscomp$4$$]).then(function($$jscomp$this$jscomp$482$$){$results$jscomp$18$$[$variants$jscomp$4$$]=
$$jscomp$this$jscomp$482$$})}),$experimentVariants$$=Promise.all($variants$jscomp$4$$).then(function(){return $results$jscomp$18$$}).then(this.$addToBody_$.bind(this));$registerServiceBuilder$$module$src$service$$(this.win,"variant",function(){return $experimentVariants$$})};
$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.$getConfig_$=function(){var $children$jscomp$9$$=this.element.children;$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(1==$children$jscomp$9$$.length&&"SCRIPT"==$children$jscomp$9$$[0].tagName&&"APPLICATION/JSON"==$children$jscomp$9$$[0].getAttribute("type").toUpperCase(),'<amp-experiment> should contain exactly one <script type="application/json"> child.');return $parseJson$$module$src$json$$($children$jscomp$9$$[0].textContent)};
$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$.prototype.$addToBody_$=function($experiments$jscomp$4$$){var $doc$jscomp$72$$=this.win.document;return $waitForBodyPromise$$module$src$dom$$($doc$jscomp$72$$).then(function(){for(var $name$jscomp$194$$ in $experiments$jscomp$4$$)$experiments$jscomp$4$$[$name$jscomp$194$$]&&$doc$jscomp$72$$.body.setAttribute("amp-x-"+$name$jscomp$194$$,$experiments$jscomp$4$$[$name$jscomp$194$$]);return $experiments$jscomp$4$$})};
(function($AMP$jscomp$36$$){$AMP$jscomp$36$$.registerElement("amp-experiment",$AmpExperiment$$module$extensions$amp_experiment$0_1$amp_experiment$$)})(self.AMP);})});
//# sourceMappingURL=extensions-amp-experiment-0.1-amp-experiment.js.map

