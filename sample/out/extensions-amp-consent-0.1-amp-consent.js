(self.AMP=self.AMP||[]).push({n:"extensions-amp-consent-0.1-amp-consent.js", v:"erwin", f:(function(){var $CONSENT_ITEM_STATE$$module$extensions$amp_consent$0_1$consent_state_manager$$={ACCEPTED:1,REJECTED:2,DISMISSED:3,NOT_REQUIRED:4,UNKNOWN:5};function $ConsentStateManager$$module$extensions$amp_consent$0_1$consent_state_manager$$($ampdoc$jscomp$130$$){this.$ampdoc_$=$ampdoc$jscomp$130$$;this.B={};this.C={};this.F={};this.D={}}$JSCompiler_prototypeAlias$$=$ConsentStateManager$$module$extensions$amp_consent$0_1$consent_state_manager$$.prototype;
$JSCompiler_prototypeAlias$$.registerConsentInstance=function($instanceId$$){this.B[$instanceId$$]?$dev$$module$src$log$$().error("CONSENT-STATE-MANAGER","instance "+$instanceId$$+" already registered"):(this.B[$instanceId$$]=new $ConsentInstance$$module$extensions$amp_consent$0_1$consent_state_manager$$(this.$ampdoc_$,$instanceId$$),this.C[$instanceId$$]=new $Observable$$module$src$observable$$,this.F[$instanceId$$]&&(this.F[$instanceId$$](),this.D[$instanceId$$]=null,this.F[$instanceId$$]=null))};
$JSCompiler_prototypeAlias$$.updateConsentInstanceState=function($instanceId$jscomp$1$$,$state$jscomp$53$$){this.B[$instanceId$jscomp$1$$]&&this.C[$instanceId$jscomp$1$$]?(this.C[$instanceId$jscomp$1$$].fire($state$jscomp$53$$),this.B[$instanceId$jscomp$1$$].update($state$jscomp$53$$)):$dev$$module$src$log$$().error("CONSENT-STATE-MANAGER","instance "+$instanceId$jscomp$1$$+" not registered")};$JSCompiler_prototypeAlias$$.getConsentInstanceState=function($instanceId$jscomp$2$$){return this.B[$instanceId$jscomp$2$$].get()};
$JSCompiler_prototypeAlias$$.onConsentStateChange=function($instanceId$jscomp$3$$,$handler$jscomp$45$$){var $unlistener$jscomp$5$$=this.C[$instanceId$jscomp$3$$].add($handler$jscomp$45$$);this.getConsentInstanceState($instanceId$jscomp$3$$).then(function($instanceId$jscomp$3$$){$handler$jscomp$45$$($instanceId$jscomp$3$$)});return $unlistener$jscomp$5$$};
$JSCompiler_prototypeAlias$$.setConsentInstanceSharedData=function($instanceId$jscomp$4$$,$sharedDataPromise$jscomp$1$$){this.B[$instanceId$jscomp$4$$].C=$sharedDataPromise$jscomp$1$$};$JSCompiler_prototypeAlias$$.getConsentInstanceSharedData=function($instanceId$jscomp$5$$){return this.B[$instanceId$jscomp$5$$].C};
$JSCompiler_prototypeAlias$$.whenConsentReady=function($instanceId$jscomp$6$$){if(this.B[$instanceId$jscomp$6$$])return Promise.resolve();if(!this.D[$instanceId$jscomp$6$$]){var $deferred$jscomp$31$$=new $Deferred$$module$src$utils$promise$$;this.D[$instanceId$jscomp$6$$]=$deferred$jscomp$31$$.promise;this.F[$instanceId$jscomp$6$$]=$deferred$jscomp$31$$.resolve}return this.D[$instanceId$jscomp$6$$]};
function $ConsentInstance$$module$extensions$amp_consent$0_1$consent_state_manager$$($ampdoc$jscomp$131$$,$id$jscomp$63$$){this.C=null;this.$storagePromise_$=$Services$$module$src$services$storageForDoc$$($ampdoc$jscomp$131$$);this.B=null;this.$storageKey_$="amp-consent:"+$id$jscomp$63$$}
$ConsentInstance$$module$extensions$amp_consent$0_1$consent_state_manager$$.prototype.update=function($state$jscomp$55$$){var $$jscomp$this$jscomp$461$$=this;$isEnumValue$$module$src$types$$($CONSENT_ITEM_STATE$$module$extensions$amp_consent$0_1$consent_state_manager$$,$state$jscomp$55$$)||($state$jscomp$55$$=5);if(3==$state$jscomp$55$$)this.B=this.B||5;else if(4==$state$jscomp$55$$)this.B&&5!=this.B||(this.B=4);else if($state$jscomp$55$$!==this.B&&(this.B=$state$jscomp$55$$,5!=$state$jscomp$55$$)){var $value$jscomp$154$$=
1==$state$jscomp$55$$;this.$storagePromise_$.then(function($storage$jscomp$6$$){$state$jscomp$55$$==$$jscomp$this$jscomp$461$$.B&&$storage$jscomp$6$$.set($$jscomp$this$jscomp$461$$.$storageKey_$,$value$jscomp$154$$)})}};
$ConsentInstance$$module$extensions$amp_consent$0_1$consent_state_manager$$.prototype.get=function(){var $$jscomp$this$jscomp$462$$=this;return this.B?Promise.resolve(this.B):this.$storagePromise_$.then(function($storage$jscomp$7$$){return $storage$jscomp$7$$.get($$jscomp$this$jscomp$462$$.$storageKey_$)}).then(function($storedValue$$){if($$jscomp$this$jscomp$462$$.B)return $$jscomp$this$jscomp$462$$.B;$$jscomp$this$jscomp$462$$.B=void 0===$storedValue$$?5:$storedValue$$?1:2;return $$jscomp$this$jscomp$462$$.B}).catch(function($$jscomp$this$jscomp$462$$){$dev$$module$src$log$$().error("CONSENT-STATE-MANAGER",
"Failed to read storage",$$jscomp$this$jscomp$462$$);return 5})};var $WHITELIST_POLICY$$module$extensions$amp_consent$0_1$consent_policy_manager$$={"default":!0,_if_responded:!0,_if_accepted:!0,_auto_reject:!0};
function $ConsentPolicyManager$$module$extensions$amp_consent$0_1$consent_policy_manager$$($ampdoc$jscomp$132_deferred$jscomp$32$$){this.$ampdoc_$=$ampdoc$jscomp$132_deferred$jscomp$32$$;this.D=$map$$module$src$utils$object$$();this.C=$map$$module$src$utils$object$$();this.B=$map$$module$src$utils$object$$();this.G=$getServicePromiseForDoc$$module$src$service$$(this.$ampdoc_$,"consentStateManager");$ampdoc$jscomp$132_deferred$jscomp$32$$=new $Deferred$$module$src$utils$promise$$;this.H=$ampdoc$jscomp$132_deferred$jscomp$32$$.promise;
this.F=$ampdoc$jscomp$132_deferred$jscomp$32$$.resolve}$JSCompiler_prototypeAlias$$=$ConsentPolicyManager$$module$extensions$amp_consent$0_1$consent_policy_manager$$.prototype;
$JSCompiler_prototypeAlias$$.registerConsentPolicyInstance=function($policyId$jscomp$4$$,$config$jscomp$38$$){var $$jscomp$this$jscomp$463$$=this;this.B[$policyId$jscomp$4$$]&&$dev$$module$src$log$$().error("consent-policy-manager","policy "+$policyId$jscomp$4$$+" already registered");var $waitFor$$=Object.keys($config$jscomp$38$$.waitFor||{}),$instance$jscomp$20$$=new $ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager$$($config$jscomp$38$$);this.B[$policyId$jscomp$4$$]=
$instance$jscomp$20$$;this.C[$policyId$jscomp$4$$]&&(this.C[$policyId$jscomp$4$$](),this.C[$policyId$jscomp$4$$]=null,this.D[$policyId$jscomp$4$$]=null);var $initPromises$$=[];this.G.then(function($policyId$jscomp$4$$){for(var $config$jscomp$38$$={},$manager$jscomp$13$$=0;$manager$jscomp$13$$<$waitFor$$.length;$config$jscomp$38$$={consentId:$config$jscomp$38$$.consentId,resolver:$config$jscomp$38$$.resolver},$manager$jscomp$13$$++){$config$jscomp$38$$.consentId=$waitFor$$[$manager$jscomp$13$$];var $deferred$jscomp$33$$=
new $Deferred$$module$src$utils$promise$$,$instanceInitValuePromise$$=$deferred$jscomp$33$$.promise;$config$jscomp$38$$.resolver=$deferred$jscomp$33$$.resolve;$policyId$jscomp$4$$.whenConsentReady($config$jscomp$38$$.consentId).then(function($config$jscomp$38$$){return function(){$policyId$jscomp$4$$.onConsentStateChange($config$jscomp$38$$.consentId,function($policyId$jscomp$4$$){$config$jscomp$38$$.resolver&&($config$jscomp$38$$.resolver(),$config$jscomp$38$$.resolver=null);$instance$jscomp$20$$.consentStateChangeHandler($config$jscomp$38$$.consentId,
$policyId$jscomp$4$$)})}}($config$jscomp$38$$));$initPromises$$.push($instanceInitValuePromise$$)}$$jscomp$this$jscomp$463$$.H.then(function(){Promise.all($initPromises$$).then(function(){$instance$jscomp$20$$.startTimeout($$jscomp$this$jscomp$463$$.$ampdoc_$.win)})})})};$JSCompiler_prototypeAlias$$.enableTimeout=function(){this.F&&this.F();this.F=null};
$JSCompiler_prototypeAlias$$.whenPolicyResolved=function($policyId$jscomp$5$$){var $$jscomp$this$jscomp$464$$=this;return $isExperimentOn$$module$src$experiments$$(this.$ampdoc_$.win,"multi-consent")||$WHITELIST_POLICY$$module$extensions$amp_consent$0_1$consent_policy_manager$$[$policyId$jscomp$5$$]?$JSCompiler_StaticMethods_whenPolicyInstanceReady_$$(this,$policyId$jscomp$5$$).then(function(){return $$jscomp$this$jscomp$464$$.B[$policyId$jscomp$5$$].F.then(function(){return $$jscomp$this$jscomp$464$$.B[$policyId$jscomp$5$$].getCurrentPolicyStatus()})}):
($user$$module$src$log$$().error("consent-policy-manager","can not find defined policy "+$policyId$jscomp$5$$+", only supported predefined policy supported now"),Promise.resolve(4))};
$JSCompiler_prototypeAlias$$.whenPolicyUnblock=function($policyId$jscomp$6$$){var $$jscomp$this$jscomp$465$$=this;return $isExperimentOn$$module$src$experiments$$(this.$ampdoc_$.win,"multi-consent")||$WHITELIST_POLICY$$module$extensions$amp_consent$0_1$consent_policy_manager$$[$policyId$jscomp$6$$]?$JSCompiler_StaticMethods_whenPolicyInstanceReady_$$(this,$policyId$jscomp$6$$).then(function(){return $$jscomp$this$jscomp$465$$.B[$policyId$jscomp$6$$].F.then(function(){return $$jscomp$this$jscomp$465$$.B[$policyId$jscomp$6$$].shouldBlock()})}):
($user$$module$src$log$$().error("consent-policy-manager","can not find defined policy "+$policyId$jscomp$6$$+", only supported predefined policy supported now"),Promise.resolve(!1))};
$JSCompiler_prototypeAlias$$.getMergedSharedData=function($policyId$jscomp$7$$){var $$jscomp$this$jscomp$466$$=this;return this.whenPolicyResolved($policyId$jscomp$7$$).then(function(){return $$jscomp$this$jscomp$466$$.G}).then(function($manager$jscomp$14$$){var $promises$jscomp$15$$=$$jscomp$this$jscomp$466$$.B[$policyId$jscomp$7$$].getConsentInstanceIds().map(function($policyId$jscomp$7$$){return $manager$jscomp$14$$.getConsentInstanceSharedData($policyId$jscomp$7$$)});return Promise.all($promises$jscomp$15$$)}).then(function($policyId$jscomp$7$$){$policyId$jscomp$7$$.unshift({});
return Object.assign.apply(null,$policyId$jscomp$7$$)})};
function $JSCompiler_StaticMethods_whenPolicyInstanceReady_$$($JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$,$policyId$jscomp$8$$){if($JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$.B[$policyId$jscomp$8$$])return Promise.resolve();if(!$JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$.D[$policyId$jscomp$8$$]){var $deferred$jscomp$34$$=new $Deferred$$module$src$utils$promise$$;$JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$.D[$policyId$jscomp$8$$]=$deferred$jscomp$34$$.promise;
$JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$.C[$policyId$jscomp$8$$]=$deferred$jscomp$34$$.resolve}return $JSCompiler_StaticMethods_whenPolicyInstanceReady_$self$$.D[$policyId$jscomp$8$$]}
function $ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager$$($config$jscomp$39$$){var $pendingItems$$=Object.keys($config$jscomp$39$$.waitFor||{});this.$config_$=$config$jscomp$39$$;this.B=$map$$module$src$utils$object$$();var $deferred$jscomp$35$$=new $Deferred$$module$src$utils$promise$$;this.F=$deferred$jscomp$35$$.promise;this.C=$deferred$jscomp$35$$.resolve;this.D=4;this.G=$config$jscomp$39$$.unblockOn||[1,3];this.$init_$($pendingItems$$)}
$JSCompiler_prototypeAlias$$=$ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager$$.prototype;$JSCompiler_prototypeAlias$$.$init_$=function($pendingItems$jscomp$1$$){for(var $i$jscomp$275$$=0;$i$jscomp$275$$<$pendingItems$jscomp$1$$.length;$i$jscomp$275$$++)this.B[$pendingItems$jscomp$1$$[$i$jscomp$275$$]]=null};$JSCompiler_prototypeAlias$$.getConsentInstanceIds=function(){return Object.keys(this.B)};
$JSCompiler_prototypeAlias$$.startTimeout=function($win$jscomp$289$$){var $$jscomp$this$jscomp$467$$=this,$timeoutConfig$$=this.$config_$.timeout,$timeoutSecond$$=null,$fallbackState$$;void 0!=$timeoutConfig$$&&($isObject$$module$src$types$$($timeoutConfig$$)?($timeoutConfig$$.fallbackAction&&"reject"==$timeoutConfig$$.fallbackAction?$fallbackState$$=2:$timeoutConfig$$.fallbackAction&&"dismiss"!=$timeoutConfig$$.fallbackAction&&$user$$module$src$log$$().error("consent-policy-manager","unsupported fallbackAction "+
$timeoutConfig$$.fallbackAction),$timeoutSecond$$=$timeoutConfig$$.seconds):$timeoutSecond$$=$timeoutConfig$$,$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($isFiniteNumber$$module$src$types$$($timeoutSecond$$),"invalid timeout value "+$timeoutSecond$$));null!=$timeoutSecond$$&&$win$jscomp$289$$.setTimeout(function(){$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$$($$jscomp$this$jscomp$467$$,!0,$fallbackState$$)},
1E3*$timeoutSecond$$)};
$JSCompiler_prototypeAlias$$.consentStateChangeHandler=function($consentId$jscomp$2$$,$state$jscomp$57$$){if(!$hasOwn$$module$src$utils$object$$(this.B,$consentId$jscomp$2$$))$dev$$module$src$log$$().error("consent-policy-manager","cannot find "+$consentId$jscomp$2$$+" in policy state");else if(5!=$state$jscomp$57$$){if(4==$state$jscomp$57$$){var $shouldOverwrite$$=1!=this.B[$consentId$jscomp$2$$]&&2!=this.B[$consentId$jscomp$2$$];$shouldOverwrite$$&&(this.B[$consentId$jscomp$2$$]=4)}else 3==$state$jscomp$57$$?
null===this.B[$consentId$jscomp$2$$]&&(this.B[$consentId$jscomp$2$$]=5):this.B[$consentId$jscomp$2$$]=$state$jscomp$57$$;$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$$(this)}};
function $JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$$($JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$,$isForce$$,$opt_fallbackState$$){$isForce$$=void 0===$isForce$$?!1:$isForce$$;for(var $isSufficient$$=!0,$isIgnored$$=!0,$isUnknown$$=!1,$items$jscomp$2$$=Object.keys($JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B),
$i$jscomp$276$$=0;$i$jscomp$276$$<$items$jscomp$2$$.length;$i$jscomp$276$$++){var $consentId$jscomp$3$$=$items$jscomp$2$$[$i$jscomp$276$$];if(null===$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B[$consentId$jscomp$3$$])if($isForce$$)$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B[$consentId$jscomp$3$$]=$opt_fallbackState$$||
5;else return;4==$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B[$consentId$jscomp$3$$]&&($isSufficient$$=!1);2==$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B[$consentId$jscomp$3$$]&&($isIgnored$$=$isSufficient$$=!1);5==$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.B[$consentId$jscomp$3$$]&&
($isIgnored$$=$isSufficient$$=!1,$isUnknown$$=!0)}$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.D=$isSufficient$$?1:$isIgnored$$?3:$isUnknown$$?4:2;$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.C&&($JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.C(),
$JSCompiler_StaticMethods_ConsentPolicyInstance$$module$extensions$amp_consent$0_1$consent_policy_manager_prototype$evaluate_$self$$.C=null)}$JSCompiler_prototypeAlias$$.getCurrentPolicyStatus=function(){return this.D};$JSCompiler_prototypeAlias$$.shouldBlock=function(){return-1<this.G.indexOf(this.D)};function $AmpConsent$$module$extensions$amp_consent$0_1$amp_consent$$($$jscomp$super$this$jscomp$32_element$jscomp$297$$){$$jscomp$super$this$jscomp$32_element$jscomp$297$$=AMP.BaseElement.call(this,$$jscomp$super$this$jscomp$32_element$jscomp$297$$)||this;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentStateManager_$=null;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentPolicyManager_$=null;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$notificationUiManager_$=null;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentUI_$=
$map$$module$src$utils$object$$();$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentConfig_$={};$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$policyConfig_$={};$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentRequired_$=$map$$module$src$utils$object$$();$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$uiInit_$=!1;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$currentDisplayInstance_$=null;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$postPromptUI_$=null;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$dialogResolver_$=
$map$$module$src$utils$object$$();$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$consentUIPendingMap_$=$map$$module$src$utils$object$$();$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$isMultiSupported_$=!1;$$jscomp$super$this$jscomp$32_element$jscomp$297$$.$vsync_$=$$jscomp$super$this$jscomp$32_element$jscomp$297$$.getVsync();return $$jscomp$super$this$jscomp$32_element$jscomp$297$$}$$jscomp$inherits$$($AmpConsent$$module$extensions$amp_consent$0_1$amp_consent$$,AMP.BaseElement);
$JSCompiler_prototypeAlias$$=$AmpConsent$$module$extensions$amp_consent$0_1$amp_consent$$.prototype;$JSCompiler_prototypeAlias$$.getConsentPolicy=function(){return null};
$JSCompiler_prototypeAlias$$.buildCallback=function(){var $$jscomp$this$jscomp$468$$=this;if($isExperimentOn$$module$src$experiments$$(this.win,"amp-consent")){this.$isMultiSupported_$=$isExperimentOn$$module$src$experiments$$(this.win,"multi-consent");$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(this.element.getAttribute("id"),"amp-consent should have an id");this.$assertAndParseConfig_$();for(var $children$jscomp$8$$=this.getRealChildren(),$i$jscomp$277$$=0;$i$jscomp$277$$<$children$jscomp$8$$.length;$i$jscomp$277$$++)this.setAsOwner($children$jscomp$8$$[$i$jscomp$277$$]);
var $consentPolicyManagerPromise$$=$getServicePromiseForDoc$$module$src$service$$(this.getAmpDoc(),"consentPolicyManager").then(function($children$jscomp$8$$){$$jscomp$this$jscomp$468$$.$consentPolicyManager_$=$children$jscomp$8$$;var $i$jscomp$277$$=Object.keys($$jscomp$this$jscomp$468$$.$consentConfig_$);$children$jscomp$8$$={};for(var $consentPolicyManagerPromise$$=0;$consentPolicyManagerPromise$$<$i$jscomp$277$$.length;$consentPolicyManagerPromise$$++)$children$jscomp$8$$[$i$jscomp$277$$[$consentPolicyManagerPromise$$]]=
void 0;var $i$jscomp$277$$={waitFor:$children$jscomp$8$$},$consentPolicyManagerPromise$$=[4,1,2,3],$consentStateManagerPromise$$={waitFor:$children$jscomp$8$$,timeout:{seconds:0,fallbackAction:"reject"},unblockOn:$consentPolicyManagerPromise$$};$$jscomp$this$jscomp$468$$.$policyConfig_$._if_responded={waitFor:$children$jscomp$8$$,unblockOn:$consentPolicyManagerPromise$$};$$jscomp$this$jscomp$468$$.$policyConfig_$._if_accepted=$i$jscomp$277$$;$$jscomp$this$jscomp$468$$.$policyConfig_$._auto_reject=
$consentStateManagerPromise$$;$$jscomp$this$jscomp$468$$.$policyConfig_$&&$$jscomp$this$jscomp$468$$.$policyConfig_$["default"]||($$jscomp$this$jscomp$468$$.$policyConfig_$["default"]=$i$jscomp$277$$);var $notificationUiManagerPromise$$=Object.keys($$jscomp$this$jscomp$468$$.$policyConfig_$);for($children$jscomp$8$$=0;$children$jscomp$8$$<$notificationUiManagerPromise$$.length;$children$jscomp$8$$++)$$jscomp$this$jscomp$468$$.$consentPolicyManager_$.registerConsentPolicyInstance($notificationUiManagerPromise$$[$children$jscomp$8$$],
$$jscomp$this$jscomp$468$$.$policyConfig_$[$notificationUiManagerPromise$$[$children$jscomp$8$$]])}),$consentStateManagerPromise$$=$getServicePromiseForDoc$$module$src$service$$(this.getAmpDoc(),"consentStateManager").then(function($children$jscomp$8$$){$$jscomp$this$jscomp$468$$.$consentStateManager_$=$children$jscomp$8$$}),$notificationUiManagerPromise$$=$getServicePromiseForDoc$$module$src$service$$(this.getAmpDoc(),"notificationUIManager").then(function($children$jscomp$8$$){$$jscomp$this$jscomp$468$$.$notificationUiManager_$=
$children$jscomp$8$$});Promise.all([$consentStateManagerPromise$$,$notificationUiManagerPromise$$,$consentPolicyManagerPromise$$]).then(function(){$$jscomp$this$jscomp$468$$.$init_$()})}};
function $JSCompiler_StaticMethods_enableInteractions_$$($JSCompiler_StaticMethods_enableInteractions_$self$$){$JSCompiler_StaticMethods_enableInteractions_$self$$.registerAction("accept",function(){return $JSCompiler_StaticMethods_enableInteractions_$self$$.$handleAction_$(0)});$JSCompiler_StaticMethods_enableInteractions_$self$$.registerAction("reject",function(){return $JSCompiler_StaticMethods_enableInteractions_$self$$.$handleAction_$(1)});$JSCompiler_StaticMethods_enableInteractions_$self$$.registerAction("dismiss",
function(){return $JSCompiler_StaticMethods_enableInteractions_$self$$.$handleAction_$(2)});$JSCompiler_StaticMethods_enableInteractions_$self$$.registerAction("prompt",function($JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$){$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$=($JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$=$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$.args)&&
$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$.consent;$JSCompiler_StaticMethods_enableInteractions_$self$$.$isMultiSupported_$||($JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$=Object.keys($JSCompiler_StaticMethods_enableInteractions_$self$$.$consentConfig_$)[0]);$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$=$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$||
"";$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($JSCompiler_StaticMethods_enableInteractions_$self$$.$consentConfig_$[$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$],"consent with id "+$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$+" not found");$JSCompiler_StaticMethods_scheduleDisplay_$$($JSCompiler_StaticMethods_enableInteractions_$self$$,$JSCompiler_consentId$jscomp$inline_1839_args$jscomp$45_consentId$jscomp$5_invocation$jscomp$27$$)})}
function $JSCompiler_StaticMethods_scheduleDisplay_$$($JSCompiler_StaticMethods_scheduleDisplay_$self$$,$instanceId$jscomp$7$$){$JSCompiler_StaticMethods_scheduleDisplay_$self$$.$notificationUiManager_$||$dev$$module$src$log$$().error("amp-consent","notification ui manager not found");!$JSCompiler_StaticMethods_scheduleDisplay_$self$$.$consentUIPendingMap_$[$instanceId$jscomp$7$$]&&$JSCompiler_StaticMethods_scheduleDisplay_$self$$.$consentUI_$[$instanceId$jscomp$7$$]&&($JSCompiler_StaticMethods_scheduleDisplay_$self$$.$consentUIPendingMap_$[$instanceId$jscomp$7$$]=
!0,$JSCompiler_StaticMethods_scheduleDisplay_$self$$.$notificationUiManager_$.registerUI($JSCompiler_StaticMethods_scheduleDisplay_$self$$.$show_$.bind($JSCompiler_StaticMethods_scheduleDisplay_$self$$,$instanceId$jscomp$7$$)))}
$JSCompiler_prototypeAlias$$.$show_$=function($instanceId$jscomp$8$$){var $$jscomp$this$jscomp$470$$=this;this.$currentDisplayInstance_$&&$dev$$module$src$log$$().error("amp-consent","other consent instance on display "+this.$currentDisplayInstance_$);this.$vsync_$.mutate(function(){$$jscomp$this$jscomp$470$$.$uiInit_$||($$jscomp$this$jscomp$470$$.$uiInit_$=!0,$toggle$$module$src$style$$($$jscomp$this$jscomp$470$$.element,!0));$$jscomp$this$jscomp$470$$.element.classList.remove("amp-hidden");$$jscomp$this$jscomp$470$$.element.classList.add("amp-active");
$$jscomp$this$jscomp$470$$.getViewport().addToFixedLayer($$jscomp$this$jscomp$470$$.element);$$jscomp$this$jscomp$470$$.$currentDisplayInstance_$=$instanceId$jscomp$8$$;var $deferred$jscomp$36$$=$$jscomp$this$jscomp$470$$.$consentUI_$[$$jscomp$this$jscomp$470$$.$currentDisplayInstance_$];$setImportantStyles$$module$src$style$$($deferred$jscomp$36$$,{display:"block"});$$jscomp$this$jscomp$470$$.scheduleLayout($deferred$jscomp$36$$)});var $deferred$jscomp$36$$=new $Deferred$$module$src$utils$promise$$;
this.$dialogResolver_$[$instanceId$jscomp$8$$]=$deferred$jscomp$36$$.resolve;return $deferred$jscomp$36$$.promise};
$JSCompiler_prototypeAlias$$.$hide_$=function(){var $$jscomp$this$jscomp$471$$=this,$uiToHide$$=this.$currentDisplayInstance_$&&this.$consentUI_$[this.$currentDisplayInstance_$];this.$vsync_$.mutate(function(){$$jscomp$this$jscomp$471$$.element.classList.add("amp-hidden");$$jscomp$this$jscomp$471$$.element.classList.remove("amp-active");$$jscomp$this$jscomp$471$$.getViewport().removeFromFixedLayer($$jscomp$this$jscomp$471$$.element);$uiToHide$$||$dev$$module$src$log$$().error("amp-consent",$$jscomp$this$jscomp$471$$.$currentDisplayInstance_$+
" no consent ui to hide");$setImportantStyles$$module$src$style$$($uiToHide$$,{display:"none"})});this.$dialogResolver_$[this.$currentDisplayInstance_$]&&(this.$dialogResolver_$[this.$currentDisplayInstance_$](),this.$dialogResolver_$[this.$currentDisplayInstance_$]=null);this.$consentUIPendingMap_$[this.$currentDisplayInstance_$]=!1;this.$currentDisplayInstance_$=null};
$JSCompiler_prototypeAlias$$.$handleAction_$=function($action$jscomp$15$$){this.$currentDisplayInstance_$?this.$consentStateManager_$?(0==$action$jscomp$15$$?this.$consentStateManager_$.updateConsentInstanceState(this.$currentDisplayInstance_$,1):1==$action$jscomp$15$$?this.$consentStateManager_$.updateConsentInstanceState(this.$currentDisplayInstance_$,2):2==$action$jscomp$15$$&&this.$consentStateManager_$.updateConsentInstanceState(this.$currentDisplayInstance_$,3),this.$hide_$()):$dev$$module$src$log$$().error("amp-consent",
"No consent state manager"):$dev$$module$src$log$$().error("amp-consent","No consent ui is displaying, consent id "+this.$currentDisplayInstance_$)};
$JSCompiler_prototypeAlias$$.$init_$=function(){for(var $$jscomp$this$jscomp$472$$=this,$instanceKeys$$=Object.keys(this.$consentConfig_$),$initPromptPromises$$=[],$$jscomp$loop$206$$={},$i$jscomp$278$$=0;$i$jscomp$278$$<$instanceKeys$$.length;$$jscomp$loop$206$$={instanceId:$$jscomp$loop$206$$.instanceId},$i$jscomp$278$$++){$$jscomp$loop$206$$.instanceId=$instanceKeys$$[$i$jscomp$278$$];this.$consentStateManager_$.registerConsentInstance($$jscomp$loop$206$$.instanceId);var $isConsentRequiredPromise$$=
$JSCompiler_StaticMethods_getConsentRequiredPromise_$$(this,$$jscomp$loop$206$$.instanceId,this.$consentConfig_$[$$jscomp$loop$206$$.instanceId]),$handlePromptPromise$$=$isConsentRequiredPromise$$.then(function($instanceKeys$$){return function(){return $JSCompiler_StaticMethods_initPromptUI_$$($$jscomp$this$jscomp$472$$,$instanceKeys$$.instanceId)}}($$jscomp$loop$206$$)).catch(function(){});$initPromptPromises$$.push($handlePromptPromise$$)}Promise.all($initPromptPromises$$).then(function(){$JSCompiler_StaticMethods_handlePostPromptUI_$$($$jscomp$this$jscomp$472$$);
$$jscomp$this$jscomp$472$$.$consentPolicyManager_$.enableTimeout()});$JSCompiler_StaticMethods_enableInteractions_$$(this)};
function $JSCompiler_StaticMethods_getConsentRequiredPromise_$$($JSCompiler_StaticMethods_getConsentRequiredPromise_$self$$,$instanceId$jscomp$9$$,$config$jscomp$40$$){$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($config$jscomp$40$$.checkConsentHref||$config$jscomp$40$$.promptIfUnknownForGeoGroup,"neither checkConsentHref nor promptIfUnknownForGeoGroup is defined");var $remoteConfigPromise$$=Promise.resolve(null);$config$jscomp$40$$.checkConsentHref&&($remoteConfigPromise$$=$JSCompiler_StaticMethods_getConsentRemote_$$($JSCompiler_StaticMethods_getConsentRequiredPromise_$self$$,
$instanceId$jscomp$9$$),$JSCompiler_StaticMethods_passSharedData_$$($JSCompiler_StaticMethods_getConsentRequiredPromise_$self$$,$instanceId$jscomp$9$$,$remoteConfigPromise$$));var $geoPromise$$=Promise.resolve();if($config$jscomp$40$$.promptIfUnknownForGeoGroup)var $geoGroup$$=$config$jscomp$40$$.promptIfUnknownForGeoGroup,$geoPromise$$=$JSCompiler_StaticMethods_isConsentRequiredGeo_$$($JSCompiler_StaticMethods_getConsentRequiredPromise_$self$$,$geoGroup$$);return $geoPromise$$.then(function($config$jscomp$40$$){return $remoteConfigPromise$$.then(function($remoteConfigPromise$$){var $geoPromise$$=
$JSCompiler_StaticMethods_getConsentRequiredPromise_$self$$.$consentRequired_$,$geoGroup$$=$config$jscomp$40$$;$remoteConfigPromise$$&&1==$remoteConfigPromise$$.promptIfUnknown?$geoGroup$$=!0:$remoteConfigPromise$$&&0==$remoteConfigPromise$$.promptIfUnknown?$geoGroup$$=!1:void 0==$geoGroup$$&&($geoGroup$$=!1);$geoPromise$$[$instanceId$jscomp$9$$]=$geoGroup$$})})}
function $JSCompiler_StaticMethods_passSharedData_$$($JSCompiler_StaticMethods_passSharedData_$self$$,$instanceId$jscomp$10$$,$responsePromise$jscomp$4_sharedDataPromise$jscomp$2$$){$responsePromise$jscomp$4_sharedDataPromise$jscomp$2$$=$responsePromise$jscomp$4_sharedDataPromise$jscomp$2$$.then(function($JSCompiler_StaticMethods_passSharedData_$self$$){return $JSCompiler_StaticMethods_passSharedData_$self$$&&void 0!==$JSCompiler_StaticMethods_passSharedData_$self$$.sharedData?$JSCompiler_StaticMethods_passSharedData_$self$$.sharedData:
null});$JSCompiler_StaticMethods_passSharedData_$self$$.$consentStateManager_$.setConsentInstanceSharedData($instanceId$jscomp$10$$,$responsePromise$jscomp$4_sharedDataPromise$jscomp$2$$)}
function $JSCompiler_StaticMethods_isConsentRequiredGeo_$$($JSCompiler_StaticMethods_isConsentRequiredGeo_$self$$,$geoGroup$jscomp$1$$){return $getElementServiceIfAvailableForDoc$$module$src$element_service$$($JSCompiler_StaticMethods_isConsentRequiredGeo_$self$$.element,"geo","amp-geo",!0).then(function($JSCompiler_StaticMethods_isConsentRequiredGeo_$self$$){$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($JSCompiler_StaticMethods_isConsentRequiredGeo_$self$$,"requires <amp-geo> to use promptIfUnknownForGeoGroup");
return 0<=$JSCompiler_StaticMethods_isConsentRequiredGeo_$self$$.ISOCountryGroups.indexOf($geoGroup$jscomp$1$$)})}
function $JSCompiler_StaticMethods_getConsentRemote_$$($JSCompiler_StaticMethods_getConsentRemote_$self$$,$instanceId$jscomp$11$$){var $init$jscomp$11$$={credentials:"include",method:"POST",body:{consentInstanceId:$instanceId$jscomp$11$$},requireAmpResponseSourceOrigin:!1},$href$jscomp$7$$=$JSCompiler_StaticMethods_getConsentRemote_$self$$.$consentConfig_$[$instanceId$jscomp$11$$].checkConsentHref;$assertHttpsUrl$$module$src$url$$($href$jscomp$7$$,$JSCompiler_StaticMethods_getConsentRemote_$self$$.element);
return $Services$$module$src$services$viewerForDoc$$($JSCompiler_StaticMethods_getConsentRemote_$self$$.getAmpDoc()).whenFirstVisible().then(function(){return $Services$$module$src$services$xhrFor$$($JSCompiler_StaticMethods_getConsentRemote_$self$$.win).fetchJson($href$jscomp$7$$,$init$jscomp$11$$).then(function($JSCompiler_StaticMethods_getConsentRemote_$self$$){return $JSCompiler_StaticMethods_getConsentRemote_$self$$.json()})})}
$JSCompiler_prototypeAlias$$.$assertAndParseConfig_$=function(){var $config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$=$childElementsByTag$$module$src$dom$$(this.element,"script");$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(1==$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.length,"amp-consent should have (only) one <script> child");$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$=$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$[0];$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($isJsonScriptTag$$module$src$dom$$($config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$),
'amp-consent consent instance config should be put in a <script>tag with type= "application/json"');var $config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$=$parseJson$$module$src$json$$($config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.textContent),$consents$jscomp$1$$=$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.consents;$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$($consents$jscomp$1$$,"amp-consent: consents config is required");$user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(!!Object.keys($consents$jscomp$1$$).length,
"amp-consent: can't find consent instance");if(!this.$isMultiSupported_$&&($user$$module$src$log$$().$Log$$module$src$log_prototype$assert$(1>=Object.keys($consents$jscomp$1$$).length,"amp-consent: only single consent instance is supported"),$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.policy))for(var $keys$jscomp$6$$=Object.keys($config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.policy),$i$jscomp$280$$=0;$i$jscomp$280$$<$keys$jscomp$6$$.length;$i$jscomp$280$$++)"default"!=$keys$jscomp$6$$[$i$jscomp$280$$]&&
($user$$module$src$log$$().warn("amp-consent","policy "+$keys$jscomp$6$$[$i$jscomp$280$$]+" is currently not supportedand will be ignored"),delete $config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.policy[$keys$jscomp$6$$[$i$jscomp$280$$]]);this.$consentConfig_$=$consents$jscomp$1$$;$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.postPromptUI&&(this.$postPromptUI_$=this.getAmpDoc().getElementById($config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.postPromptUI));this.$policyConfig_$=$config$jscomp$41_script$jscomp$5_scripts$jscomp$3$$.policy||
this.$policyConfig_$};
function $JSCompiler_StaticMethods_initPromptUI_$$($JSCompiler_StaticMethods_initPromptUI_$self$$,$instanceId$jscomp$13$$){var $promptUI$$=$JSCompiler_StaticMethods_initPromptUI_$self$$.$consentConfig_$[$instanceId$jscomp$13$$].promptUI,$element$jscomp$298$$=$JSCompiler_StaticMethods_initPromptUI_$self$$.getAmpDoc().getElementById($promptUI$$);$JSCompiler_StaticMethods_initPromptUI_$self$$.$consentUI_$[$instanceId$jscomp$13$$]=$element$jscomp$298$$;return $JSCompiler_StaticMethods_initPromptUI_$self$$.$consentStateManager_$.getConsentInstanceState($instanceId$jscomp$13$$).then(function($promptUI$$){5==$promptUI$$&&
($JSCompiler_StaticMethods_initPromptUI_$self$$.$consentRequired_$[$instanceId$jscomp$13$$]?$JSCompiler_StaticMethods_scheduleDisplay_$$($JSCompiler_StaticMethods_initPromptUI_$self$$,$instanceId$jscomp$13$$):$JSCompiler_StaticMethods_initPromptUI_$self$$.$consentStateManager_$.updateConsentInstanceState($instanceId$jscomp$13$$,4))})}
function $JSCompiler_StaticMethods_handlePostPromptUI_$$($JSCompiler_StaticMethods_handlePostPromptUI_$self$$){var $classList$$=$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.element.classList;$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$notificationUiManager_$.onQueueEmpty(function(){$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$postPromptUI_$&&$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$vsync_$.mutate(function(){$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$uiInit_$||
($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$uiInit_$=!0,$toggle$$module$src$style$$($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.element,!0));$classList$$.add("amp-active");$classList$$.remove("amp-hidden");$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.getViewport().addToFixedLayer($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.element);$setImportantStyles$$module$src$style$$($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$postPromptUI_$,{display:"block"})})});
$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$notificationUiManager_$.onQueueNotEmpty(function(){$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$postPromptUI_$&&$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$vsync_$.mutate(function(){$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$currentDisplayInstance_$||($classList$$.add("amp-hidden"),$classList$$.remove("amp-active"));$JSCompiler_StaticMethods_handlePostPromptUI_$self$$.getViewport().removeFromFixedLayer($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.element);
$setImportantStyles$$module$src$style$$($JSCompiler_StaticMethods_handlePostPromptUI_$self$$.$postPromptUI_$,{display:"none"})})})}
(function($AMP$jscomp$33$$){$AMP$jscomp$33$$.registerElement("amp-consent",$AmpConsent$$module$extensions$amp_consent$0_1$amp_consent$$,"amp-consent{position:fixed;bottom:0;left:0;overflow:hidden!important;background:hsla(0,0%,100%,0.7);z-index:1000;width:100%}amp-consent>*{display:none!important;max-height:100vh!important}amp-consent.amp-active{visibility:visible}amp-consent.amp-hidden{visibility:hidden}\n/*# sourceURL=/extensions/amp-consent/0.1/amp-consent.css*/");$AMP$jscomp$33$$.registerServiceForDoc("notificationUIManager",
$NotificationUiManager$$module$src$service$notification_ui_manager$$);$AMP$jscomp$33$$.registerServiceForDoc("consentStateManager",$ConsentStateManager$$module$extensions$amp_consent$0_1$consent_state_manager$$);$AMP$jscomp$33$$.registerServiceForDoc("consentPolicyManager",$ConsentPolicyManager$$module$extensions$amp_consent$0_1$consent_policy_manager$$)})(self.AMP);})});
//# sourceMappingURL=extensions-amp-consent-0.1-amp-consent.js.map

